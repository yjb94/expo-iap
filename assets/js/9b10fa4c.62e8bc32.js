"use strict";(self.webpackChunkexpo_iap_docs=self.webpackChunkexpo_iap_docs||[]).push([[2537],{571:(e,n,r)=>{r.d(n,{A:()=>o});var s=r(6540),t=r(4848);function i({className:e="adfit",style:n,unit:r,height:i,width:o}){return(0,s.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const s=n.querySelectorAll(".kakao_ad_area"),t=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');s.forEach(e=>e.remove()),t.forEach(e=>e.remove());const a=document.createElement("ins"),c=document.createElement("script");a.className="kakao_ad_area",a.style.cssText="display:none; width:100%;",c.async=!0,c.type="text/javascript",c.src="//t1.daumcdn.net/kas/static/ba.min.js",a.setAttribute("data-ad-width",o.toString()),a.setAttribute("data-ad-height",i.toString()),a.setAttribute("data-ad-unit",r),n.appendChild(a),n.appendChild(c)},100);return()=>clearTimeout(n)},[e,r,i,o]),(0,t.jsx)("div",{style:n,children:(0,t.jsx)("div",{className:e})})}function o(){return(0,t.jsx)(i,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},6069:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"guides/migration","title":"Migration from react-native-iap","description":"This guide helps you migrate from react-native-iap to expo-iap. While the APIs are similar, there are some key differences and improvements in expo-iap.","source":"@site/docs/guides/migration.md","sourceDirName":"guides","slug":"/guides/migration","permalink":"/docs/guides/migration","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/expo-iap/tree/main/docs/docs/guides/migration.md","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"title":"Migration from react-native-iap","sidebar_label":"Migration Guide","sidebar_position":7},"sidebar":"tutorialSidebar","previous":{"title":"FAQ","permalink":"/docs/guides/faq"},"next":{"title":"Support","permalink":"/docs/guides/support"}}');var t=r(4848),i=r(8453),o=r(571);const a={title:"Migration from react-native-iap",sidebar_label:"Migration Guide",sidebar_position:7},c="Migration from react-native-iap",d={},l=[{value:"Key Differences",id:"key-differences",level:2},{value:"Package Installation",id:"package-installation",level:3},{value:"Hook Usage",id:"hook-usage",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Step-by-Step Migration",id:"step-by-step-migration",level:2},{value:"1. Update Dependencies",id:"1-update-dependencies",level:3},{value:"2. Update Imports",id:"2-update-imports",level:3},{value:"3. Remove Context Wrapper",id:"3-remove-context-wrapper",level:3},{value:"4. Update Hook Usage",id:"4-update-hook-usage",level:3},{value:"5. Update to v2.8.1 Type System (Recommended)",id:"5-update-to-v281-type-system-recommended",level:3},{value:"6. Update Error Handling",id:"6-update-error-handling",level:3},{value:"API Changes",id:"api-changes",level:2},{value:"Method Naming Differences",id:"method-naming-differences",level:3},{value:"Method Signatures",id:"method-signatures",level:3},{value:"Deprecated Methods in expo-iap",id:"deprecated-methods-in-expo-iap",level:3},{value:"New Methods",id:"new-methods",level:3},{value:"Testing Migration",id:"testing-migration",level:2},{value:"1. Test Basic Functionality",id:"1-test-basic-functionality",level:3},{value:"2. Test Purchase Flow",id:"2-test-purchase-flow",level:3},{value:"3. Test Error Scenarios",id:"3-test-error-scenarios",level:3},{value:"Common Migration Issues",id:"common-migration-issues",level:2},{value:"1. Context Not Working",id:"1-context-not-working",level:3},{value:"2. TypeScript Errors",id:"2-typescript-errors",level:3},{value:"3. Purchase Listeners",id:"3-purchase-listeners",level:3},{value:"Performance Improvements",id:"performance-improvements",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"Next Steps",id:"next-steps",level:2}];function h(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"migration-from-react-native-iap",children:"Migration from react-native-iap"})}),"\n",(0,t.jsx)(o.A,{}),"\n",(0,t.jsxs)(n.p,{children:["This guide helps you migrate from ",(0,t.jsx)(n.code,{children:"react-native-iap"})," to ",(0,t.jsx)(n.code,{children:"expo-iap"}),". While the APIs are similar, there are some key differences and improvements in ",(0,t.jsx)(n.code,{children:"expo-iap"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"key-differences",children:"Key Differences"}),"\n",(0,t.jsx)(n.h3,{id:"package-installation",children:"Package Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Before (react-native-iap)\nnpm install react-native-iap\n\n# After (expo-iap)\nnpm install expo-iap\n"})}),"\n",(0,t.jsx)(n.h3,{id:"hook-usage",children:"Hook Usage"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"react-native-iap:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {useIAP, withIAPContext} from 'react-native-iap';\n\n// Had to wrap app with context\nconst AppWithIAP = withIAPContext(App);\n\nfunction App() {\n  const {connected, products, getProducts} = useIAP();\n  // ...\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"expo-iap:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {useIAP} from 'expo-iap';\n\n// No context wrapper needed\nfunction App() {\n  const {connected, products, getProducts} = useIAP();\n  // Connection and listeners are automatically managed\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"react-native-iap:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"try {\n  await requestPurchase({request: {sku: 'product_id'}});\n} catch (error) {\n  console.error(error.code, error.message);\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"expo-iap:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {PurchaseError} from 'expo-iap';\n\ntry {\n  await requestPurchase({request: {sku: 'product_id'}});\n} catch (error) {\n  if (error instanceof PurchaseError) {\n    // Enhanced error handling with better typing\n    console.error(error.code, error.message, error.platform);\n  }\n}\n"})}),"\n",(0,t.jsx)(n.h2,{id:"step-by-step-migration",children:"Step-by-Step Migration"}),"\n",(0,t.jsx)(n.h3,{id:"1-update-dependencies",children:"1. Update Dependencies"}),"\n",(0,t.jsx)(n.p,{children:"Remove react-native-iap and install expo-iap:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"npm uninstall react-native-iap\nnpm install expo-iap\n\n# For iOS\ncd ios && pod install && cd ..\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-update-imports",children:"2. Update Imports"}),"\n",(0,t.jsx)(n.p,{children:"Replace all react-native-iap imports:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Before\nimport {\n  initConnection,\n  getProducts,\n  requestPurchase,\n  useIAP,\n  withIAPContext,\n} from 'react-native-iap';\n\n// After\nimport {\n  initConnection,\n  getProducts,\n  requestPurchase,\n  useIAP,\n  // withIAPContext not needed\n} from 'expo-iap';\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-remove-context-wrapper",children:"3. Remove Context Wrapper"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Before:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {withIAPContext} from 'react-native-iap';\n\nconst App = () => {\n  return <YourAppContent />;\n};\n\nexport default withIAPContext(App);\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"After:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// No wrapper needed\nconst App = () => {\n  return <YourAppContent />;\n};\n\nexport default App;\n"})}),"\n",(0,t.jsx)(n.h3,{id:"4-update-hook-usage",children:"4. Update Hook Usage"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useIAP"})," hook signature is mostly the same, but with better TypeScript support:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Before:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const {\n  connected,\n  products,\n  subscriptions,\n  purchaseHistory,\n  availablePurchases,\n  currentPurchase,\n  currentPurchaseError,\n  finishTransaction,\n  getProducts,\n  getSubscriptions,\n} = useIAP();\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"After:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const {\n  connected,\n  products,\n  subscriptions,\n  purchaseHistories, // Note: plural form in expo-iap\n  availablePurchases,\n  currentPurchase,\n  currentPurchaseError,\n  finishTransaction,\n  getProducts,\n  getSubscriptions,\n  getPurchaseHistories, // Method: plural form in expo-iap v2.6.0+\n  getAvailablePurchases,\n  // Additional methods and better typing\n} = useIAP();\n"})}),"\n",(0,t.jsx)(n.h3,{id:"5-update-to-v281-type-system-recommended",children:"5. Update to v2.8.1 Type System (Recommended)"}),"\n",(0,t.jsx)(n.p,{children:"Starting from v2.8.1, expo-iap provides improved type consistency across platforms:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Platform Identification:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// v2.8.1+ includes platform fields for better type discrimination\nif (product.platform === 'ios') {\n  // TypeScript knows this is ProductIOS\n  console.log(product.isFamilyShareableIOS);\n} else if (product.platform === 'android') {\n  // TypeScript knows this is ProductAndroid\n  console.log(product.nameAndroid);\n}\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Common Fields:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Before v2.8.1\nconst ids = purchase.idsAndroid; // Android only\n\n// After v2.8.1\nconst ids = purchase.ids; // Works for both platforms\n"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," Deprecated fields will be removed in v2.9.0. Update your code to use platform-specific field names:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Android: Use fields with ",(0,t.jsx)(n.code,{children:"Android"})," suffix (e.g., ",(0,t.jsx)(n.code,{children:"nameAndroid"})," instead of ",(0,t.jsx)(n.code,{children:"name"}),")"]}),"\n",(0,t.jsxs)(n.li,{children:["iOS: Use fields with ",(0,t.jsx)(n.code,{children:"IOS"})," suffix (e.g., ",(0,t.jsx)(n.code,{children:"displayNameIOS"})," instead of ",(0,t.jsx)(n.code,{children:"displayName"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"6-update-error-handling",children:"6. Update Error Handling"}),"\n",(0,t.jsx)(n.p,{children:"Enhance error handling with the new error types:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Before:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"useEffect(() => {\n  if (currentPurchaseError) {\n    console.error('Purchase error:', currentPurchaseError);\n  }\n}, [currentPurchaseError]);\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"After:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {PurchaseError} from 'expo-iap';\n\nuseEffect(() => {\n  if (currentPurchaseError) {\n    if (currentPurchaseError instanceof PurchaseError) {\n      switch (currentPurchaseError.code) {\n        case 'E_USER_CANCELLED':\n          // Handle user cancellation\n          break;\n        case 'E_NETWORK_ERROR':\n          // Handle network error\n          break;\n        default:\n          console.error('Purchase error:', currentPurchaseError);\n      }\n    }\n  }\n}, [currentPurchaseError]);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"api-changes",children:"API Changes"}),"\n",(0,t.jsx)(n.h3,{id:"method-naming-differences",children:"Method Naming Differences"}),"\n",(0,t.jsx)(n.p,{children:"expo-iap maintains API compatibility with react-native-iap, with the following naming conventions:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"react-native-iap"}),(0,t.jsx)(n.th,{children:"expo-iap"}),(0,t.jsx)(n.th,{children:"Status"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"getPurchaseHistory()"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"getPurchaseHistories()"})}),(0,t.jsx)(n.td,{children:"\u2705 Updated in v2.6.0"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"purchaseHistory"})," (in hook)"]}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"purchaseHistories"})}),(0,t.jsx)(n.td,{children:"\u2705 Plural form"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"getAvailablePurchases()"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"getAvailablePurchases()"})}),(0,t.jsx)(n.td,{children:"\u2705 Same"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsxs)(n.td,{children:[(0,t.jsx)(n.code,{children:"availablePurchases"})," (in hook)"]}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"availablePurchases"})}),(0,t.jsx)(n.td,{children:"\u2705 Same"})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u26a0\ufe0f Breaking Change in v2.6.0:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"getPurchaseHistory()"})," (singular) is now deprecated"]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.code,{children:"getPurchaseHistories()"})," (plural) instead"]}),"\n",(0,t.jsxs)(n.li,{children:["The hook already uses ",(0,t.jsx)(n.code,{children:"purchaseHistories"})," (plural)"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"method-signatures",children:"Method Signatures"}),"\n",(0,t.jsx)(n.p,{children:"Most method signatures remain the same, but with improved TypeScript definitions:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Both libraries have the same signature\nawait getProducts({skus: ['product1', 'product2']});\nawait requestPurchase({request: {sku: 'product_id'}});\nawait finishTransaction({purchase});\nawait getPurchaseHistories(); // Note: plural form in expo-iap v2.6.0+\n"})}),"\n",(0,t.jsx)(n.h3,{id:"deprecated-methods-in-expo-iap",children:"Deprecated Methods in expo-iap"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"\u26a0\ufe0f Important:"})," The following methods are deprecated and will be removed in a future version:"]}),"\n"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Deprecated Method"}),(0,t.jsx)(n.th,{children:"Replacement"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"getProducts(skus)"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"requestProducts({ skus, type: 'inapp' })"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"getSubscriptions(skus)"})}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"requestProducts({ skus, type: 'subs' })"})})]})]})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Migration Examples:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Old way (deprecated)\nimport {getProducts, getSubscriptions} from 'expo-iap';\n\nconst products = await getProducts(['product1', 'product2']);\nconst subs = await getSubscriptions(['sub1', 'sub2']);\n\n// New way (recommended)\nimport {requestProducts} from 'expo-iap';\n\nconst products = await requestProducts({\n  skus: ['product1', 'product2'],\n  type: 'inapp',\n});\n\nconst subs = await requestProducts({\n  skus: ['sub1', 'sub2'],\n  type: 'subs',\n});\n"})}),"\n",(0,t.jsx)(n.h3,{id:"new-methods",children:"New Methods"}),"\n",(0,t.jsx)(n.p,{children:"expo-iap includes some additional utility methods:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {validateReceiptIos, validateReceiptAndroid} from 'expo-iap';\n\n// Platform-specific receipt validation helpers\nconst isValidIOS = await validateReceiptIos({\n  receiptBody: purchase.transactionReceipt,\n  password: 'your_shared_secret',\n});\n\nconst isValidAndroid = await validateReceiptAndroid({\n  packageName: 'com.yourapp',\n  productId: purchase.productId,\n  productToken: purchase.purchaseToken,\n  accessToken: 'your_access_token',\n});\n"})}),"\n",(0,t.jsx)(n.h2,{id:"testing-migration",children:"Testing Migration"}),"\n",(0,t.jsx)(n.h3,{id:"1-test-basic-functionality",children:"1. Test Basic Functionality"}),"\n",(0,t.jsx)(n.p,{children:"Create a simple test to ensure basic functionality works:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {useIAP} from 'expo-iap';\n\nexport default function MigrationTest() {\n  const {connected, getProducts} = useIAP();\n\n  useEffect(() => {\n    if (connected) {\n      console.log('\u2705 Connection successful');\n\n      requestProducts({skus: ['test_product'], type: 'inapp'})\n        .then((products) => {\n          console.log('\u2705 Products fetched:', products.length);\n        })\n        .catch((error) => {\n          console.error('\u274c Product fetch failed:', error);\n        });\n    }\n  }, [connected, getProducts]);\n\n  return (\n    <View>\n      <Text>Migration Test</Text>\n      <Text>Connected: {connected ? '\u2705' : '\u274c'}</Text>\n    </View>\n  );\n}\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-test-purchase-flow",children:"2. Test Purchase Flow"}),"\n",(0,t.jsx)(n.p,{children:"Test the complete purchase flow:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const testPurchaseFlow = async () => {\n  try {\n    // 1. Fetch products\n    const products = await requestProducts({\n      skus: ['test_product'],\n      type: 'inapp',\n    });\n    console.log('\u2705 Products fetched');\n\n    // 2. Request purchase\n    await requestPurchase({sku: 'test_product'});\n    console.log('\u2705 Purchase requested');\n\n    // 3. Purchase handling will be automatic with useIAP\n  } catch (error) {\n    console.error('\u274c Purchase flow failed:', error);\n  }\n};\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-test-error-scenarios",children:"3. Test Error Scenarios"}),"\n",(0,t.jsx)(n.p,{children:"Ensure error handling transitions properly:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const testErrorHandling = () => {\n  // Test with invalid product ID\n  requestProducts({skus: ['invalid_product'], type: 'inapp'})\n    .then((products) => {\n      if (products.length === 0) {\n        console.log('\u2705 Empty products handled correctly');\n      }\n    })\n    .catch((error) => {\n      console.log('\u2705 Error handled:', error.code);\n    });\n};\n"})}),"\n",(0,t.jsx)(n.h2,{id:"common-migration-issues",children:"Common Migration Issues"}),"\n",(0,t.jsx)(n.h3,{id:"1-context-not-working",children:"1. Context Not Working"}),"\n",(0,t.jsx)(n.p,{children:"If you're getting context errors:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// \u274c This is no longer needed\nimport {withIAPContext} from 'expo-iap';\n\n// \u2705 Just use the hook directly\nimport {useIAP} from 'expo-iap';\n"})}),"\n",(0,t.jsx)(n.h3,{id:"2-typescript-errors",children:"2. TypeScript Errors"}),"\n",(0,t.jsx)(n.p,{children:"Update your TypeScript types if you were using custom interfaces:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"// Before\nimport {Product, Purchase} from 'react-native-iap';\n\n// After\nimport {Product, Purchase} from 'expo-iap';\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-purchase-listeners",children:"3. Purchase Listeners"}),"\n",(0,t.jsx)(n.p,{children:"If you were using manual listeners, consider switching to the hook:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Before:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"import {purchaseUpdatedListener} from 'react-native-iap';\n\nuseEffect(() => {\n  const subscription = purchaseUpdatedListener((purchase) => {\n    // Handle purchase\n  });\n\n  return () => subscription.remove();\n}, []);\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"After (using hook):"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",children:"const {currentPurchase} = useIAP();\n\nuseEffect(() => {\n  if (currentPurchase) {\n    // Handle purchase automatically\n  }\n}, [currentPurchase]);\n"})}),"\n",(0,t.jsx)(n.h2,{id:"performance-improvements",children:"Performance Improvements"}),"\n",(0,t.jsx)(n.p,{children:"expo-iap includes several performance improvements:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Better caching"}),": Products and subscriptions are cached more efficiently"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reduced re-renders"}),": The hook is optimized to minimize unnecessary re-renders"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Memory management"}),": Better cleanup of listeners and connections"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,t.jsx)(n.p,{children:"If you encounter issues during migration:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Check the ",(0,t.jsx)(n.a,{href:"./troubleshooting",children:"troubleshooting guide"})]}),"\n",(0,t.jsxs)(n.li,{children:["Review the ",(0,t.jsx)(n.a,{href:"./faq",children:"FAQ"})]}),"\n",(0,t.jsxs)(n.li,{children:["Create a ",(0,t.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/issues",children:"GitHub issue"})," with:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Your previous react-native-iap version"}),"\n",(0,t.jsx)(n.li,{children:"The migration step where you got stuck"}),"\n",(0,t.jsx)(n.li,{children:"Error messages and relevant code"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,t.jsx)(n.p,{children:"After successful migration:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["Review the ",(0,t.jsx)(n.a,{href:"../api/use-iap",children:"new features"})," available in expo-iap"]}),"\n",(0,t.jsxs)(n.li,{children:["Consider implementing ",(0,t.jsx)(n.a,{href:"./troubleshooting",children:"enhanced error handling"})]}),"\n",(0,t.jsxs)(n.li,{children:["Explore ",(0,t.jsx)(n.a,{href:"./lifecycle",children:"performance optimizations"})]}),"\n",(0,t.jsx)(n.li,{children:"Update your testing procedures if needed"}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>o,x:()=>a});var s=r(6540);const t={},i=s.createContext(t);function o(e){const n=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);