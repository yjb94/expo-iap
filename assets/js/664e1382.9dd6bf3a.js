"use strict";(self.webpackChunkexpo_iap_docs=self.webpackChunkexpo_iap_docs||[]).push([[8088],{571:(e,n,i)=>{i.d(n,{A:()=>o});var t=i(6540),s=i(4848);function r({className:e="adfit",style:n,unit:i,height:r,width:o}){return(0,t.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const t=n.querySelectorAll(".kakao_ad_area"),s=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');t.forEach(e=>e.remove()),s.forEach(e=>e.remove());const a=document.createElement("ins"),c=document.createElement("script");a.className="kakao_ad_area",a.style.cssText="display:none; width:100%;",c.async=!0,c.type="text/javascript",c.src="//t1.daumcdn.net/kas/static/ba.min.js",a.setAttribute("data-ad-width",o.toString()),a.setAttribute("data-ad-height",r.toString()),a.setAttribute("data-ad-unit",i),n.appendChild(a),n.appendChild(c)},100);return()=>clearTimeout(n)},[e,i,r,o]),(0,s.jsx)("div",{style:n,children:(0,s.jsx)("div",{className:e})})}function o(){return(0,s.jsx)(r,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},6816:e=>{e.exports=JSON.parse('{"permalink":"/blog/v2-6-0-release","editUrl":"https://github.com/hyochan/expo-iap/tree/main/docs/blog/2025-07-21-v2-6-0-release.md","source":"@site/blog/2025-07-21-v2-6-0-release.md","title":"2.6.0 - Major iOS Improvements","description":"We\'re excited to announce the release of expo-iap v2.6.0! This release brings significant improvements to iOS functionality, better TypeScript support, and enhanced developer experience.","date":"2025-07-21T00:00:00.000Z","tags":[{"inline":false,"label":"Release","permalink":"/blog/tags/release","description":"New version releases and updates"},{"inline":false,"label":"iOS","permalink":"/blog/tags/ios","description":"iOS platform specific features"},{"inline":false,"label":"TypeScript","permalink":"/blog/tags/typescript","description":"TypeScript type definitions and improvements"},{"inline":false,"label":"Breaking Changes","permalink":"/blog/tags/breaking-changes","description":"Updates that require code changes"}],"readingTime":3.92,"hasTruncateMarker":true,"authors":[{"name":"Hyo","title":"Expo IAP Maintainer","url":"https://github.com/hyochan","page":{"permalink":"/blog/authors/hyochan"},"socials":{"github":"https://github.com/hyochan","linkedin":"https://www.linkedin.com/in/hyochanjang/","x":"https://x.com/hyodotdev"},"imageURL":"https://github.com/hyochan.png","key":"hyochan"}],"frontMatter":{"slug":"v2-6-0-release","title":"2.6.0 - Major iOS Improvements","authors":["hyochan"],"tags":["release","ios","typescript","breaking-changes"],"date":"2025-07-21T00:00:00.000Z"},"unlisted":false,"prevItem":{"title":"2.6.3 - iOS AppTransaction Support","permalink":"/blog/v2-6-3-release"},"nextItem":{"title":"Welcome to Expo IAP Documentation","permalink":"/blog/welcome-to-expo-iap"}}')},8453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>a});var t=i(6540);const s={},r=t.createContext(s);function o(e){const n=t.useContext(r);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(r.Provider,{value:n},e.children)}},8838:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>t,toc:()=>d});var t=i(6816),s=i(4848),r=i(8453),o=i(571);const a={slug:"v2-6-0-release",title:"2.6.0 - Major iOS Improvements",authors:["hyochan"],tags:["release","ios","typescript","breaking-changes"],date:new Date("2025-07-21T00:00:00.000Z")},c="2.6.0 - Major iOS Improvements",l={authorsImageUrls:[void 0]},d=[{value:"\ud83c\udf89 What&#39;s New",id:"-whats-new",level:2},{value:"1. Proper iOS Subscription Data Serialization",id:"1-proper-ios-subscription-data-serialization",level:3},{value:"Before (v2.5.x)",id:"before-v25x",level:4},{value:"After (v2.6.0)",id:"after-v260",level:4},{value:"2. Improved Type Structure",id:"2-improved-type-structure",level:3},{value:"3. New getStorefront() API",id:"3-new-getstorefront-api",level:3},{value:"4. AppTransaction Support (iOS 16.0+)",id:"4-apptransaction-support-ios-160",level:3},{value:"5. Comprehensive iOS Subscription Offers Documentation",id:"5-comprehensive-ios-subscription-offers-documentation",level:3},{value:"\u26a0\ufe0f Breaking Changes",id:"\ufe0f-breaking-changes",level:2},{value:"1. Period Structure Changes",id:"1-period-structure-changes",level:3},{value:"2. Optional Subscription Field",id:"2-optional-subscription-field",level:3},{value:"3. Method Naming Update",id:"3-method-naming-update",level:3},{value:"\ud83d\udccb Complete Example",id:"-complete-example",level:2},{value:"\ud83d\udc1b Bug Fixes",id:"-bug-fixes",level:2},{value:"\ud83d\udcda Documentation Updates",id:"-documentation-updates",level:2},{value:"\ud83d\udcaa Benefits",id:"-benefits",level:2},{value:"\ud83d\ude4f Acknowledgments",id:"-acknowledgments",level:2},{value:"\ud83d\udce6 Installation",id:"-installation",level:2},{value:"\ud83d\udd17 Links",id:"-links",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.A,{}),"\n",(0,s.jsx)(n.p,{children:"We're excited to announce the release of expo-iap v2.6.0! This release brings significant improvements to iOS functionality, better TypeScript support, and enhanced developer experience."}),"\n",(0,s.jsx)(n.h2,{id:"-whats-new",children:"\ud83c\udf89 What's New"}),"\n",(0,s.jsx)(n.h3,{id:"1-proper-ios-subscription-data-serialization",children:"1. Proper iOS Subscription Data Serialization"}),"\n",(0,s.jsxs)(n.p,{children:["The biggest improvement in this release is the proper serialization of iOS subscription data. Previously, the ",(0,s.jsx)(n.code,{children:"subscription"})," field would return undefined for subscription products. Now, all subscription information is properly serialized and accessible."]}),"\n",(0,s.jsx)(n.h4,{id:"before-v25x",children:"Before (v2.5.x)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const subscriptions = await getSubscriptions(['com.example.premium']);\nconsole.log(subscriptions[0].subscription); // undefined \ud83d\ude22\n"})}),"\n",(0,s.jsx)(n.h4,{id:"after-v260",children:"After (v2.6.0)"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const subscriptions = await getSubscriptions(['com.example.premium']);\nconsole.log(subscriptions[0].subscription); // \u2705 Full subscription data!\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-improved-type-structure",children:"2. Improved Type Structure"}),"\n",(0,s.jsxs)(n.p,{children:["We've restructured how period information is returned to be more consistent and useful. The ",(0,s.jsx)(n.code,{children:"period"})," and ",(0,s.jsx)(n.code,{children:"subscriptionPeriod"})," properties now return objects with ",(0,s.jsx)(n.code,{children:"unit"})," and ",(0,s.jsx)(n.code,{children:"value"})," properties instead of just the unit string."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Before (v2.5.x):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"type SubscriptionInfo = {\n  subscriptionPeriod: SubscriptionIosPeriod; // 'DAY' | 'WEEK' | 'MONTH' | 'YEAR'\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"After (v2.6.0):"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"type SubscriptionInfo = {\n  subscriptionPeriod: {\n    unit: SubscriptionIosPeriod; // 'DAY' | 'WEEK' | 'MONTH' | 'YEAR'\n    value: number; // e.g., 1, 3, 6, 12\n  };\n};\n"})}),"\n",(0,s.jsx)(n.p,{children:'This change provides more detailed information about subscription periods. For example, instead of just knowing a subscription is "MONTH", you now know if it\'s "1 MONTH", "3 MONTHS", etc.'}),"\n",(0,s.jsx)(n.h3,{id:"3-new-getstorefront-api",children:"3. New getStorefront() API"}),"\n",(0,s.jsx)(n.p,{children:"Get the user's App Store country code:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import {getStorefront} from 'expo-iap';\n\nconst countryCode = await getStorefront();\nconsole.log('User storefront:', countryCode); // 'US', 'GB', 'JP', etc.\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-apptransaction-support-ios-160",children:"4. AppTransaction Support (iOS 16.0+)"}),"\n",(0,s.jsx)(n.p,{children:"For premium apps or apps that were previously paid, you can now verify the initial app purchase:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import {getAppTransaction} from 'expo-iap';\n\nconst appTransaction = await getAppTransaction();\nif (appTransaction) {\n  console.log('App Transaction ID:', appTransaction.appTransactionID);\n  console.log('Purchase Date:', new Date(appTransaction.originalPurchaseDate));\n  // Send deviceVerification to your server for validation\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"5-comprehensive-ios-subscription-offers-documentation",children:"5. Comprehensive iOS Subscription Offers Documentation"}),"\n",(0,s.jsx)(n.p,{children:"We've added extensive documentation for handling iOS subscription offers:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Understanding introductory and promotional offers"}),"\n",(0,s.jsx)(n.li,{children:"Checking user eligibility"}),"\n",(0,s.jsx)(n.li,{children:"Implementing offer UI"}),"\n",(0,s.jsx)(n.li,{children:"Best practices and troubleshooting"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Check out the new ",(0,s.jsx)(n.a,{href:"/docs/guides/ios-subscription-offers",children:"iOS Subscription Offers Guide"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"\ufe0f-breaking-changes",children:"\u26a0\ufe0f Breaking Changes"}),"\n",(0,s.jsx)(n.h3,{id:"1-period-structure-changes",children:"1. Period Structure Changes"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"period"})," and ",(0,s.jsx)(n.code,{children:"subscriptionPeriod"})," properties now return objects with ",(0,s.jsx)(n.code,{children:"unit"})," and ",(0,s.jsx)(n.code,{children:"value"})," properties:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Before\nif (offer.period === 'MONTH') {\n  console.log('Monthly offer');\n}\n\n// After\nif (offer.period.unit === 'MONTH') {\n  console.log(`${offer.period.value} month(s) offer`);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"2-optional-subscription-field",children:"2. Optional Subscription Field"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"subscription"})," field in ",(0,s.jsx)(n.code,{children:"ProductIOS"})," is now optional to reflect that not all iOS products have subscription information:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Before\ntype ProductIOS = {\n  subscription: SubscriptionInfo; // Always required\n};\n\n// After\ntype ProductIOS = {\n  subscription?: SubscriptionInfo; // Optional - only present for subscriptions\n};\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Migration:"})," Update your code to handle the optional subscription field:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"// Check if product is a subscription\nif (product.subscription) {\n  // Handle subscription-specific logic\n  console.log('Period:', product.subscription.subscriptionPeriod);\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-method-naming-update",children:"3. Method Naming Update"}),"\n",(0,s.jsx)(n.p,{children:"To improve consistency, we've updated the purchase history method naming:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Deprecated"}),": ",(0,s.jsx)(n.code,{children:"getPurchaseHistory()"})," (singular)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"New"}),": ",(0,s.jsx)(n.code,{children:"getPurchaseHistories()"})," (plural)"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"useIAP"})," hook already uses the plural form:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const {purchaseHistories, getPurchaseHistories} = useIAP();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-complete-example",children:"\ud83d\udccb Complete Example"}),"\n",(0,s.jsx)(n.p,{children:"Here's a complete example showing how to work with the new types:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"import {useIAP} from 'expo-iap';\n\nfunction ProductList() {\n  const {products} = useIAP();\n\n  return (\n    <View>\n      {products.map((product) => (\n        <View key={product.productId}>\n          <Text>{product.displayName}</Text>\n          <Text>{product.localizedPrice}</Text>\n\n          {product.subscription && (\n            <View>\n              <Text>\n                Subscription Period:{' '}\n                {product.subscription.subscriptionPeriod.value}{' '}\n                {product.subscription.subscriptionPeriod.unit.toLowerCase()}(s)\n              </Text>\n\n              {product.subscription.introductoryOffer && (\n                <Text>\n                  Intro Offer:{' '}\n                  {product.subscription.introductoryOffer.displayPrice} for{' '}\n                  {product.subscription.introductoryOffer.period.value}{' '}\n                  {product.subscription.introductoryOffer.period.unit.toLowerCase()}\n                  (s)\n                </Text>\n              )}\n            </View>\n          )}\n        </View>\n      ))}\n    </View>\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-bug-fixes",children:"\ud83d\udc1b Bug Fixes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Fixed iOS subscription data not being properly serialized"}),"\n",(0,s.jsx)(n.li,{children:"Fixed period information returning raw values instead of structured data"}),"\n",(0,s.jsx)(n.li,{children:"Improved error handling for platform-specific methods"}),"\n",(0,s.jsxs)(n.li,{children:["Fixed inconsistent naming between ",(0,s.jsx)(n.code,{children:"getPurchaseHistory"})," and ",(0,s.jsx)(n.code,{children:"purchaseHistories"})]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-documentation-updates",children:"\ud83d\udcda Documentation Updates"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Added iOS Subscription Offers guide"}),"\n",(0,s.jsx)(n.li,{children:"Updated type definitions documentation"}),"\n",(0,s.jsx)(n.li,{children:"Added examples for new APIs"}),"\n",(0,s.jsx)(n.li,{children:"Improved troubleshooting section"}),"\n",(0,s.jsx)(n.li,{children:"Updated migration guide for naming consistency"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-benefits",children:"\ud83d\udcaa Benefits"}),"\n",(0,s.jsx)(n.p,{children:"These improvements provide several benefits:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Better Type Safety"}),": The TypeScript compiler can now catch more potential errors at compile time"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"More Accurate Data"}),": Period information now includes both unit and value, providing complete subscription duration details"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Clearer Intent"}),": Optional types make it explicit which products are subscriptions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consistent API"}),": Naming conventions are now consistent throughout the library"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Future-Proof"}),": These changes align better with Apple's StoreKit 2 data structures"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-acknowledgments",children:"\ud83d\ude4f Acknowledgments"}),"\n",(0,s.jsx)(n.p,{children:"Special thanks to:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/Navipro70",children:"@Navipro70"})," for identifying the subscription serialization issue and providing valuable feedback"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://github.com/matthieuMay",children:"@matthieuMay"})," for the initial iOS type improvements"]}),"\n",(0,s.jsx)(n.li,{children:"All contributors who helped test and improve this release"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"-installation",children:"\ud83d\udce6 Installation"}),"\n",(0,s.jsx)(n.p,{children:"Update to the latest version:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install expo-iap@2.6.0\n# or\nyarn add expo-iap@2.6.0\n"})}),"\n",(0,s.jsx)(n.h2,{id:"-links",children:"\ud83d\udd17 Links"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/releases/tag/v2.6.0",children:"Full Changelog"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/guides/ios-subscription-offers",children:"iOS Subscription Offers Guide"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/api/methods/core-methods",children:"API Reference"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/docs/guides/migration",children:"Migration Guide"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,s.jsx)(n.p,{children:"We're working on:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Android subscription offers improvements"}),"\n",(0,s.jsx)(n.li,{children:"Better error messages and debugging tools"}),"\n",(0,s.jsx)(n.li,{children:"Performance optimizations"}),"\n",(0,s.jsx)(n.li,{children:"More comprehensive examples"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Stay tuned for more updates! If you have any feedback or suggestions, please ",(0,s.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/issues",children:"open an issue"}),"."]}),"\n",(0,s.jsx)(n.p,{children:"Happy coding! \ud83d\ude80"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);