"use strict";(self.webpackChunkexpo_iap_docs=self.webpackChunkexpo_iap_docs||[]).push([[3637],{571:(e,r,n)=>{n.d(r,{A:()=>a});var s=n(6540),t=n(4848);function o({className:e="adfit",style:r,unit:n,height:o,width:a}){return(0,s.useEffect)(()=>{const r=setTimeout(()=>{const r=document.querySelector(`.${e}`);if(!r)return void console.warn(`AdFit: Element with class "${e}" not found`);const s=r.querySelectorAll(".kakao_ad_area"),t=r.querySelectorAll('script[src*="kas/static/ba.min.js"]');s.forEach(e=>e.remove()),t.forEach(e=>e.remove());const c=document.createElement("ins"),i=document.createElement("script");c.className="kakao_ad_area",c.style.cssText="display:none; width:100%;",i.async=!0,i.type="text/javascript",i.src="//t1.daumcdn.net/kas/static/ba.min.js",c.setAttribute("data-ad-width",a.toString()),c.setAttribute("data-ad-height",o.toString()),c.setAttribute("data-ad-unit",n),r.appendChild(c),r.appendChild(i)},100);return()=>clearTimeout(r)},[e,n,o,a]),(0,t.jsx)("div",{style:r,children:(0,t.jsx)("div",{className:e})})}function a(){return(0,t.jsx)(o,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},8384:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>c,metadata:()=>s,toc:()=>u});const s=JSON.parse('{"id":"api/methods/listeners","title":"Listeners","description":"expo-iap provides event listeners to handle purchase updates and errors. These listeners are essential for handling the asynchronous nature of in-app purchases.","source":"@site/versioned_docs/version-2.6/api/methods/listeners.md","sourceDirName":"api/methods","slug":"/api/methods/listeners","permalink":"/docs/2.6/api/methods/listeners","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/expo-iap/tree/main/docs/versioned_docs/version-2.6/api/methods/listeners.md","tags":[],"version":"2.6","sidebarPosition":2,"frontMatter":{"title":"Listeners","sidebar_label":"Listeners","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Core Methods","permalink":"/docs/2.6/api/methods/core-methods"},"next":{"title":"useIAP Hook","permalink":"/docs/2.6/api/use-iap"}}');var t=n(4848),o=n(8453),a=n(571);const c={title:"Listeners",sidebar_label:"Listeners",sidebar_position:2},i="Purchase Listeners",l={},u=[{value:"purchaseUpdatedListener()",id:"purchaseupdatedlistener",level:2},{value:"purchaseErrorListener()",id:"purchaseerrorlistener",level:2},{value:"promotedProductListener() (iOS only)",id:"promotedproductlistener-ios-only",level:2},{value:"Using Listeners with React Hooks",id:"using-listeners-with-react-hooks",level:2},{value:"Functional Components",id:"functional-components",level:3},{value:"Class Components",id:"class-components",level:3},{value:"Custom Hook for Purchase Handling",id:"custom-hook-for-purchase-handling",level:2},{value:"Important Notes",id:"important-notes",level:2},{value:"Listener Lifecycle",id:"listener-lifecycle",level:3},{value:"Error Handling",id:"error-handling",level:3},{value:"Purchase States",id:"purchase-states",level:3},{value:"Alternative: useIAP Hook",id:"alternative-useiap-hook",level:2}];function d(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"purchase-listeners",children:"Purchase Listeners"})}),"\n",(0,t.jsx)(a.A,{}),"\n",(0,t.jsx)(r.p,{children:"expo-iap provides event listeners to handle purchase updates and errors. These listeners are essential for handling the asynchronous nature of in-app purchases."}),"\n",(0,t.jsx)(r.h2,{id:"purchaseupdatedlistener",children:"purchaseUpdatedListener()"}),"\n",(0,t.jsx)(r.p,{children:"Listens for purchase updates from the store."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"import {purchaseUpdatedListener} from 'expo-iap';\n\nconst setupPurchaseListener = () => {\n  const subscription = purchaseUpdatedListener((purchase) => {\n    console.log('Purchase received:', purchase);\n    handlePurchaseUpdate(purchase);\n  });\n\n  // Clean up listener when component unmounts\n  return () => {\n    if (subscription) {\n      subscription.remove();\n    }\n  };\n};\n\nconst handlePurchaseUpdate = async (purchase) => {\n  try {\n    // Validate receipt on your server\n    const isValid = await validateReceiptOnServer(purchase);\n\n    if (isValid) {\n      // Grant purchase to user\n      await grantPurchaseToUser(purchase);\n\n      // Finish the transaction\n      await finishTransaction({purchase});\n\n      console.log('Purchase completed successfully');\n    } else {\n      console.error('Receipt validation failed');\n    }\n  } catch (error) {\n    console.error('Error handling purchase:', error);\n  }\n};\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"callback"})," (function): Function to call when a purchase update is received","\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"purchase"})," (Purchase): The purchase object"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Returns:"})," Subscription object with ",(0,t.jsx)(r.code,{children:"remove()"})," method"]}),"\n",(0,t.jsx)(r.h2,{id:"purchaseerrorlistener",children:"purchaseErrorListener()"}),"\n",(0,t.jsx)(r.p,{children:"Listens for purchase errors from the store."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"import {purchaseErrorListener} from 'expo-iap';\n\nconst setupErrorListener = () => {\n  const subscription = purchaseErrorListener((error) => {\n    console.error('Purchase error:', error);\n    handlePurchaseError(error);\n  });\n\n  // Clean up listener when component unmounts\n  return () => {\n    if (subscription) {\n      subscription.remove();\n    }\n  };\n};\n\nconst handlePurchaseError = (error) => {\n  switch (error.code) {\n    case 'E_USER_CANCELLED':\n      // User cancelled the purchase\n      console.log('Purchase cancelled by user');\n      break;\n\n    case 'E_NETWORK_ERROR':\n      // Network error occurred\n      showErrorMessage(\n        'Network error. Please check your connection and try again.',\n      );\n      break;\n\n    case 'E_ITEM_UNAVAILABLE':\n      // Product is not available\n      showErrorMessage('This product is currently unavailable.');\n      break;\n\n    case 'E_ALREADY_OWNED':\n      // User already owns this product\n      showErrorMessage('You already own this product.');\n      break;\n\n    default:\n      // Other errors\n      showErrorMessage(`Purchase failed: ${error.message}`);\n      break;\n  }\n};\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"callback"})," (function): Function to call when a purchase error occurs","\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"error"})," (IAPError): The error object"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Returns:"})," Subscription object with ",(0,t.jsx)(r.code,{children:"remove()"})," method"]}),"\n",(0,t.jsx)(r.h2,{id:"promotedproductlistener-ios-only",children:"promotedProductListener() (iOS only)"}),"\n",(0,t.jsx)(r.p,{children:"Listens for promoted product purchases initiated from the App Store."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"import {promotedProductListener} from 'expo-iap';\n\nconst setupPromotedProductListener = () => {\n  const subscription = promotedProductListener((productId) => {\n    console.log('Promoted product purchase initiated:', productId);\n    handlePromotedProduct(productId);\n  });\n\n  return () => {\n    if (subscription) {\n      subscription.remove();\n    }\n  };\n};\n\nconst handlePromotedProduct = async (productId) => {\n  try {\n    // Fetch the product details\n    const products = await getProducts({skus: [productId]});\n    const product = products[0];\n\n    if (product) {\n      // Show product details to user and confirm purchase\n      const confirmed = await showProductConfirmation(product);\n\n      if (confirmed) {\n        await requestPurchase({sku: productId});\n      }\n    }\n  } catch (error) {\n    console.error('Error handling promoted product:', error);\n  }\n};\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Parameters:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"callback"})," (function): Function to call when a promoted product is selected","\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"productId"})," (string): The ID of the promoted product"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Returns:"})," Subscription object with ",(0,t.jsx)(r.code,{children:"remove()"})," method"]}),"\n",(0,t.jsx)(r.h2,{id:"using-listeners-with-react-hooks",children:"Using Listeners with React Hooks"}),"\n",(0,t.jsx)(r.h3,{id:"functional-components",children:"Functional Components"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"import React, {useEffect} from 'react';\nimport {purchaseUpdatedListener, purchaseErrorListener} from 'expo-iap';\n\nexport default function PurchaseManager() {\n  useEffect(() => {\n    // Set up purchase listeners\n    const purchaseUpdateSubscription = purchaseUpdatedListener((purchase) => {\n      handlePurchaseUpdate(purchase);\n    });\n\n    const purchaseErrorSubscription = purchaseErrorListener((error) => {\n      handlePurchaseError(error);\n    });\n\n    // Cleanup function\n    return () => {\n      purchaseUpdateSubscription?.remove();\n      purchaseErrorSubscription?.remove();\n    };\n  }, []);\n\n  const handlePurchaseUpdate = async (purchase) => {\n    // Handle purchase logic\n  };\n\n  const handlePurchaseError = (error) => {\n    // Handle error logic\n  };\n\n  return <div>{/* Your component JSX */}</div>;\n}\n"})}),"\n",(0,t.jsx)(r.h3,{id:"class-components",children:"Class Components"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"import React, {Component} from 'react';\nimport {purchaseUpdatedListener, purchaseErrorListener} from 'expo-iap';\n\nclass PurchaseManager extends Component {\n  purchaseUpdateSubscription = null;\n  purchaseErrorSubscription = null;\n\n  componentDidMount() {\n    // Set up listeners\n    this.purchaseUpdateSubscription = purchaseUpdatedListener((purchase) => {\n      this.handlePurchaseUpdate(purchase);\n    });\n\n    this.purchaseErrorSubscription = purchaseErrorListener((error) => {\n      this.handlePurchaseError(error);\n    });\n  }\n\n  componentWillUnmount() {\n    // Clean up listeners\n    if (this.purchaseUpdateSubscription) {\n      this.purchaseUpdateSubscription.remove();\n    }\n\n    if (this.purchaseErrorSubscription) {\n      this.purchaseErrorSubscription.remove();\n    }\n  }\n\n  handlePurchaseUpdate = async (purchase) => {\n    // Handle purchase logic\n  };\n\n  handlePurchaseError = (error) => {\n    // Handle error logic\n  };\n\n  render() {\n    return <div>{/* Your component JSX */}</div>;\n  }\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"custom-hook-for-purchase-handling",children:"Custom Hook for Purchase Handling"}),"\n",(0,t.jsx)(r.p,{children:"You can create a custom hook to encapsulate purchase listener logic:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"import {useEffect, useCallback} from 'react';\nimport {\n  purchaseUpdatedListener,\n  purchaseErrorListener,\n  finishTransaction,\n} from 'expo-iap';\n\nexport const usePurchaseHandler = () => {\n  const handlePurchaseUpdate = useCallback(async (purchase) => {\n    try {\n      // Validate receipt\n      const isValid = await validateReceiptOnServer(purchase);\n\n      if (isValid) {\n        // Grant purchase\n        await grantPurchaseToUser(purchase);\n\n        // Finish transaction\n        await finishTransaction({purchase});\n\n        // Show success message\n        showSuccessMessage('Purchase completed successfully!');\n      } else {\n        console.error('Receipt validation failed');\n        showErrorMessage('Purchase validation failed. Please contact support.');\n      }\n    } catch (error) {\n      console.error('Error handling purchase:', error);\n      showErrorMessage('An error occurred while processing your purchase.');\n    }\n  }, []);\n\n  const handlePurchaseError = useCallback((error) => {\n    console.error('Purchase error:', error);\n\n    switch (error.code) {\n      case 'E_USER_CANCELLED':\n        // Don't show error for user cancellation\n        break;\n      default:\n        showErrorMessage(`Purchase failed: ${error.message}`);\n        break;\n    }\n  }, []);\n\n  useEffect(() => {\n    // Set up listeners\n    const purchaseUpdateSubscription =\n      purchaseUpdatedListener(handlePurchaseUpdate);\n    const purchaseErrorSubscription =\n      purchaseErrorListener(handlePurchaseError);\n\n    // Cleanup\n    return () => {\n      purchaseUpdateSubscription?.remove();\n      purchaseErrorSubscription?.remove();\n    };\n  }, [handlePurchaseUpdate, handlePurchaseError]);\n};\n\n// Usage in component\nexport default function MyStoreComponent() {\n  usePurchaseHandler(); // Sets up listeners automatically\n\n  return <div>{/* Your store UI */}</div>;\n}\n"})}),"\n",(0,t.jsx)(r.h2,{id:"important-notes",children:"Important Notes"}),"\n",(0,t.jsx)(r.h3,{id:"listener-lifecycle",children:"Listener Lifecycle"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Set up early"}),": Set up listeners as early as possible in your app lifecycle"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Clean up properly"}),": Always remove listeners to prevent memory leaks"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Handle app states"}),": Purchases can complete when your app is in the background"]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"error-handling",children:"Error Handling"}),"\n",(0,t.jsx)(r.p,{children:"Always handle both purchase updates and errors:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"useEffect(() => {\n  const purchaseUpdateSubscription = purchaseUpdatedListener((purchase) => {\n    // Handle successful/pending purchases\n  });\n\n  const purchaseErrorSubscription = purchaseErrorListener((error) => {\n    // Handle purchase errors\n  });\n\n  return () => {\n    purchaseUpdateSubscription?.remove();\n    purchaseErrorSubscription?.remove();\n  };\n}, []);\n"})}),"\n",(0,t.jsx)(r.h3,{id:"purchase-states",children:"Purchase States"}),"\n",(0,t.jsx)(r.p,{children:"Purchases can be in different states:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Purchased"}),": Successfully completed"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Pending"}),": Awaiting approval (e.g., parental approval)"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Failed"}),": Purchase failed"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"Handle each state appropriately in your purchase listener."}),"\n",(0,t.jsx)(r.h2,{id:"alternative-useiap-hook",children:"Alternative: useIAP Hook"}),"\n",(0,t.jsxs)(r.p,{children:["For simpler usage, consider using the ",(0,t.jsx)(r.code,{children:"useIAP"})," hook which automatically manages listeners:"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"import {useIAP} from 'expo-iap';\n\nexport default function StoreComponent() {\n  const {currentPurchase, currentPurchaseError} = useIAP();\n\n  useEffect(() => {\n    if (currentPurchase) {\n      handlePurchaseUpdate(currentPurchase);\n    }\n  }, [currentPurchase]);\n\n  useEffect(() => {\n    if (currentPurchaseError) {\n      handlePurchaseError(currentPurchaseError);\n    }\n  }, [currentPurchaseError]);\n\n  // Rest of component\n}\n"})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"useIAP"})," hook provides a more React-friendly way to handle purchases without manually managing listeners."]})]})}function h(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>c});var s=n(6540);const t={},o=s.createContext(t);function a(e){const r=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);