"use strict";(self.webpackChunkexpo_iap_docs=self.webpackChunkexpo_iap_docs||[]).push([[4637],{571:(e,i,n)=>{n.d(i,{A:()=>t});var r=n(6540),s=n(4848);function o({className:e="adfit",style:i,unit:n,height:o,width:t}){return(0,r.useEffect)(()=>{const i=setTimeout(()=>{const i=document.querySelector(`.${e}`);if(!i)return void console.warn(`AdFit: Element with class "${e}" not found`);const r=i.querySelectorAll(".kakao_ad_area"),s=i.querySelectorAll('script[src*="kas/static/ba.min.js"]');r.forEach(e=>e.remove()),s.forEach(e=>e.remove());const c=document.createElement("ins"),l=document.createElement("script");c.className="kakao_ad_area",c.style.cssText="display:none; width:100%;",l.async=!0,l.type="text/javascript",l.src="//t1.daumcdn.net/kas/static/ba.min.js",c.setAttribute("data-ad-width",t.toString()),c.setAttribute("data-ad-height",o.toString()),c.setAttribute("data-ad-unit",n),i.appendChild(c),i.appendChild(l)},100);return()=>clearTimeout(i)},[e,n,o,t]),(0,s.jsx)("div",{style:i,children:(0,s.jsx)("div",{className:e})})}function t(){return(0,s.jsx)(o,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},6571:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>c,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"guides/ios-subscription-offers","title":"iOS Subscription Offers","description":"This guide explains how to implement and manage subscription offers (introductory and promotional) for iOS in expo-iap.","source":"@site/docs/guides/ios-subscription-offers.md","sourceDirName":"guides","slug":"/guides/ios-subscription-offers","permalink":"/docs/guides/ios-subscription-offers","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/expo-iap/tree/main/docs/docs/guides/ios-subscription-offers.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"title":"iOS Subscription Offers","sidebar_label":"iOS Subscription Offers","sidebar_position":3}}');var s=n(4848),o=n(8453),t=n(571);const c={title:"iOS Subscription Offers",sidebar_label:"iOS Subscription Offers",sidebar_position:3},l="iOS Subscription Offers",a={},d=[{value:"Overview",id:"overview",level:2},{value:"Understanding Offer Types",id:"understanding-offer-types",level:2},{value:"Introductory Offers",id:"introductory-offers",level:3},{value:"Payment Modes Explained",id:"payment-modes-explained",level:3},{value:"Accessing Offer Information",id:"accessing-offer-information",level:2},{value:"With expo-iap v2.6.0+",id:"with-expo-iap-v260",level:3},{value:"For Earlier Versions (&lt; v2.6.0)",id:"for-earlier-versions--v260",level:3},{value:"Checking Eligibility",id:"checking-eligibility",level:2},{value:"For Introductory Offers",id:"for-introductory-offers",level:3},{value:"Implementing Purchase Flow",id:"implementing-purchase-flow",level:2},{value:"With Introductory Offer",id:"with-introductory-offer",level:3},{value:"With Promotional Offer",id:"with-promotional-offer",level:3},{value:"Displaying Offers in UI",id:"displaying-offers-in-ui",level:2},{value:"Example: Intro Offer Banner",id:"example-intro-offer-banner",level:3},{value:"Best Practices",id:"best-practices",level:2},{value:"Common Issues",id:"common-issues",level:2},{value:"Offer Not Showing",id:"offer-not-showing",level:3},{value:"Eligibility Always False",id:"eligibility-always-false",level:3},{value:"Server-Side Considerations",id:"server-side-considerations",level:2},{value:"Migration from react-native-iap",id:"migration-from-react-native-iap",level:2},{value:"Additional Resources",id:"additional-resources",level:2},{value:"Need Help?",id:"need-help",level:2}];function f(e){const i={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"ios-subscription-offers",children:"iOS Subscription Offers"})}),"\n",(0,s.jsx)(t.A,{}),"\n",(0,s.jsx)(i.p,{children:"This guide explains how to implement and manage subscription offers (introductory and promotional) for iOS in expo-iap."}),"\n",(0,s.jsx)(i.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsx)(i.p,{children:"iOS supports several types of subscription offers to help you attract and retain subscribers:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Introductory Offers"})," - Special pricing for new subscribers (free trial, pay as you go, pay up front)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Promotional Offers"})," - Discounted pricing for existing or lapsed subscribers"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Offer Codes"})," - Redeemable codes for special pricing"]}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Starting from expo-iap v2.6.0, all offer information is properly included in the subscription data structure."}),"\n",(0,s.jsx)(i.h2,{id:"understanding-offer-types",children:"Understanding Offer Types"}),"\n",(0,s.jsx)(i.h3,{id:"introductory-offers",children:"Introductory Offers"}),"\n",(0,s.jsx)(i.p,{children:"Available only to new subscribers who haven't previously subscribed to any product in the subscription group."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",children:"type SubscriptionOffer = {\n  displayPrice: string;      // Localized price string\n  id: string;               // Offer identifier\n  paymentMode: PaymentMode; // 'FREETRIAL' | 'PAYASYOUGO' | 'PAYUPFRONT'\n  period: {\n    unit: 'DAY' | 'WEEK' | 'MONTH' | 'YEAR';\n    value: number;\n  };\n  periodCount: number;      // Number of periods\n  price: number;           // Price in decimal\n  type: 'introductory';\n};\n"})}),"\n",(0,s.jsx)(i.h3,{id:"payment-modes-explained",children:"Payment Modes Explained"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"FREETRIAL"}),": Free access for a specified duration"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"PAYASYOUGO"}),": Discounted price for each billing period"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"PAYUPFRONT"}),": One-time discounted payment for multiple periods"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"accessing-offer-information",children:"Accessing Offer Information"}),"\n",(0,s.jsx)(i.h3,{id:"with-expo-iap-v260",children:"With expo-iap v2.6.0+"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",children:"import { requestProducts } from 'expo-iap';\n\nconst subscriptions = await requestProducts({ skus: ['com.example.premium'], type: 'subs' });\nconst subscription = subscriptions[0];\n\n// Access introductory offer\nif (subscription.subscription?.introductoryOffer) {\n  const offer = subscription.subscription.introductoryOffer;\n  console.log(`Offer: ${offer.displayPrice} for ${offer.periodCount} ${offer.period.unit}(s)`);\n  console.log(`Payment mode: ${offer.paymentMode}`);\n}\n\n// Access promotional offers\nconst promotionalOffers = subscription.subscription?.promotionalOffers || [];\npromotionalOffers.forEach(offer => {\n  console.log(`Promo: ${offer.id} - ${offer.displayPrice}`);\n});\n"})}),"\n",(0,s.jsx)(i.h3,{id:"for-earlier-versions--v260",children:"For Earlier Versions (< v2.6.0)"}),"\n",(0,s.jsxs)(i.p,{children:["If you're using an earlier version, you can parse the ",(0,s.jsx)(i.code,{children:"jsonRepresentation"}),":"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",children:"const subscription = subscriptions[0];\nconst jsonData = JSON.parse(subscription.jsonRepresentation);\n\n// Access offers through discounts array\nconst discounts = jsonData.discounts || [];\ndiscounts.forEach(discount => {\n  console.log(`Offer ID: ${discount.id}`);\n  console.log(`Price: ${discount.price}`);\n  console.log(`Period: ${discount.subscriptionPeriod}`);\n});\n"})}),"\n",(0,s.jsx)(i.h2,{id:"checking-eligibility",children:"Checking Eligibility"}),"\n",(0,s.jsx)(i.h3,{id:"for-introductory-offers",children:"For Introductory Offers"}),"\n",(0,s.jsxs)(i.p,{children:["Use the ",(0,s.jsx)(i.code,{children:"isEligibleForIntroOffer"})," property to check if a user can redeem an introductory offer:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",children:"const checkEligibility = async () => {\n  const subscriptions = await requestProducts({ skus: ['com.example.premium'], type: 'subs' });\n  const subscription = subscriptions[0];\n  \n  // This property indicates if the user is eligible for intro offer\n  if (subscription.isEligibleForIntroOffer) {\n    // Show introductory offer UI\n    displayIntroductoryOffer(subscription.subscription?.introductoryOffer);\n  } else {\n    // Show regular pricing\n    displayRegularPrice(subscription);\n  }\n};\n"})}),"\n",(0,s.jsx)(i.h2,{id:"implementing-purchase-flow",children:"Implementing Purchase Flow"}),"\n",(0,s.jsx)(i.h3,{id:"with-introductory-offer",children:"With Introductory Offer"}),"\n",(0,s.jsx)(i.p,{children:"When a user is eligible for an introductory offer, the purchase flow remains the same:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",children:"import { requestPurchase } from 'expo-iap';\nimport { Platform } from 'react-native';\n\nconst purchaseWithOffer = async (subscription: any) => {\n  try {\n    // Check if eligible for intro offer\n    if (subscription.isEligibleForIntroOffer) {\n      console.log('User is eligible for introductory offer');\n    }\n    \n    // Purchase request (offers are automatically applied)\n    await requestPurchase({\n      request: {\n        sku: subscription.id,\n      },\n      type: 'subs',\n    });\n    \n    // Handle success in purchase listener\n  } catch (error) {\n    console.error('Purchase failed:', error);\n  }\n};\n"})}),"\n",(0,s.jsx)(i.h3,{id:"with-promotional-offer",children:"With Promotional Offer"}),"\n",(0,s.jsx)(i.p,{children:"For promotional offers, you need to prepare the offer signature on your server:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",children:"const purchasePromotionalOffer = async (subscription: any, offerId: string) => {\n  try {\n    // 1. Get offer details from your server\n    const offerDetails = await fetchOfferDetailsFromServer(offerId, subscription.id);\n    \n    // 2. Purchase with promotional offer\n    await requestPurchase({\n      request: {\n        sku: subscription.id,\n        appAccountToken: offerDetails.appAccountToken,\n        // Additional offer parameters may be required\n      },\n      type: 'subs',\n    });\n  } catch (error) {\n    console.error('Promotional purchase failed:', error);\n  }\n};\n"})}),"\n",(0,s.jsx)(i.h2,{id:"displaying-offers-in-ui",children:"Displaying Offers in UI"}),"\n",(0,s.jsx)(i.h3,{id:"example-intro-offer-banner",children:"Example: Intro Offer Banner"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-typescript",children:"const IntroOfferBanner = ({ subscription }) => {\n  const offer = subscription.subscription?.introductoryOffer;\n  \n  if (!offer || !subscription.isEligibleForIntroOffer) {\n    return null;\n  }\n  \n  const getOfferText = () => {\n    switch (offer.paymentMode) {\n      case 'FREETRIAL':\n        return `Try ${offer.periodCount} ${offer.period.unit.toLowerCase()}(s) FREE`;\n      case 'PAYASYOUGO':\n        return `${offer.displayPrice} for ${offer.periodCount} ${offer.period.unit.toLowerCase()}(s)`;\n      case 'PAYUPFRONT':\n        return `${offer.displayPrice} for first ${offer.periodCount} ${offer.period.unit.toLowerCase()}(s)`;\n      default:\n        return offer.displayPrice;\n    }\n  };\n  \n  return (\n    <View style={styles.offerBanner}>\n      <Text style={styles.offerText}>{getOfferText()}</Text>\n      <Text style={styles.regularPrice}>Then {subscription.displayPrice}</Text>\n    </View>\n  );\n};\n"})}),"\n",(0,s.jsx)(i.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Always Check Eligibility"}),": Don't assume users are eligible for offers"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Clear Communication"}),": Display offer terms clearly (duration, price after offer)"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Server Validation"}),": Validate offer eligibility server-side for security"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Handle Edge Cases"}),": Users might lose eligibility between checking and purchasing"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Test Thoroughly"}),": Use sandbox accounts to test different offer scenarios"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"common-issues",children:"Common Issues"}),"\n",(0,s.jsx)(i.h3,{id:"offer-not-showing",children:"Offer Not Showing"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Ensure the offer is properly configured in App Store Connect"}),"\n",(0,s.jsx)(i.li,{children:"Check that the sandbox account hasn't previously used the offer"}),"\n",(0,s.jsx)(i.li,{children:"Verify the subscription group configuration"}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"eligibility-always-false",children:"Eligibility Always False"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Clear purchase history in sandbox account settings"}),"\n",(0,s.jsx)(i.li,{children:"Create a new sandbox tester"}),"\n",(0,s.jsx)(i.li,{children:"Check if the account has any active/expired subscriptions in the group"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"server-side-considerations",children:"Server-Side Considerations"}),"\n",(0,s.jsx)(i.p,{children:"For promotional offers, you'll need server-side implementation:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsx)(i.li,{children:"Generate offer signatures using Apple's APIs"}),"\n",(0,s.jsx)(i.li,{children:"Validate user eligibility"}),"\n",(0,s.jsx)(i.li,{children:"Return signed offer details to your app"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Example server endpoint:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-javascript",children:"// Node.js example\napp.post('/generate-offer-signature', async (req, res) => {\n  const { userId, productId, offerId } = req.body;\n  \n  // 1. Verify user eligibility\n  const isEligible = await checkUserEligibility(userId, productId);\n  \n  if (!isEligible) {\n    return res.status(403).json({ error: 'User not eligible' });\n  }\n  \n  // 2. Generate signature using Apple's StoreKit API\n  const signature = await generateOfferSignature(productId, offerId);\n  \n  res.json({\n    signature,\n    nonce: generateNonce(),\n    timestamp: Date.now(),\n    keyIdentifier: process.env.APPLE_KEY_ID\n  });\n});\n"})}),"\n",(0,s.jsx)(i.h2,{id:"migration-from-react-native-iap",children:"Migration from react-native-iap"}),"\n",(0,s.jsx)(i.p,{children:"If you're migrating from react-native-iap, note these differences:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Data Structure"}),": expo-iap provides properly typed offer data in v2.6.0+"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"No Manual Parsing"}),": No need to parse ",(0,s.jsx)(i.code,{children:"jsonRepresentation"})," for basic offer info"]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.strong,{children:"Simplified API"}),": Offer information is directly accessible through the subscription object"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"additional-resources",children:"Additional Resources"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://developer.apple.com/documentation/storekit/in-app_purchase/original_api_for_in-app_purchase/subscriptions_and_offers",children:"Apple's Subscription Offers Documentation"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://help.apple.com/app-store-connect/#/dee3e2d29c6c",children:"App Store Connect Offer Configuration"})}),"\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"https://developer.apple.com/documentation/storekit/in-app_purchase/testing_in-app_purchases_with_sandbox",children:"StoreKit Testing Guide"})}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"need-help",children:"Need Help?"}),"\n",(0,s.jsx)(i.p,{children:"If you encounter issues with subscription offers:"}),"\n",(0,s.jsxs)(i.ol,{children:["\n",(0,s.jsxs)(i.li,{children:["Check the ",(0,s.jsx)(i.a,{href:"/docs/guides/faq",children:"FAQ"})," for common questions"]}),"\n",(0,s.jsxs)(i.li,{children:["Review the ",(0,s.jsx)(i.a,{href:"/docs/guides/troubleshooting",children:"Troubleshooting Guide"})]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"https://github.com/hyochan/expo-iap/issues",children:"Open an issue"})," with detailed information"]}),"\n"]})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(f,{...e})}):f(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>t,x:()=>c});var r=n(6540);const s={},o=r.createContext(s);function t(e){const i=r.useContext(o);return r.useMemo(function(){return"function"==typeof e?e(i):{...i,...e}},[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(o.Provider,{value:i},e.children)}}}]);