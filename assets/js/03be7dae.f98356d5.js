"use strict";(self.webpackChunkexpo_iap_docs=self.webpackChunkexpo_iap_docs||[]).push([[4768],{571:(e,n,s)=>{s.d(n,{A:()=>o});var i=s(6540),r=s(4848);function t({className:e="adfit",style:n,unit:s,height:t,width:o}){return(0,i.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const i=n.querySelectorAll(".kakao_ad_area"),r=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');i.forEach(e=>e.remove()),r.forEach(e=>e.remove());const c=document.createElement("ins"),a=document.createElement("script");c.className="kakao_ad_area",c.style.cssText="display:none; width:100%;",a.async=!0,a.type="text/javascript",a.src="//t1.daumcdn.net/kas/static/ba.min.js",c.setAttribute("data-ad-width",o.toString()),c.setAttribute("data-ad-height",t.toString()),c.setAttribute("data-ad-unit",s),n.appendChild(c),n.appendChild(a)},100);return()=>clearTimeout(n)},[e,s,t,o]),(0,r.jsx)("div",{style:n,children:(0,r.jsx)("div",{className:e})})}function o(){return(0,r.jsx)(t,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},2152:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"guides/troubleshooting","title":"Troubleshooting","description":"This guide covers common issues you might encounter when implementing in-app purchases with expo-iap and how to resolve them.","source":"@site/docs/guides/troubleshooting.md","sourceDirName":"guides","slug":"/guides/troubleshooting","permalink":"/docs/guides/troubleshooting","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/expo-iap/tree/main/docs/docs/guides/troubleshooting.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"title":"Troubleshooting","sidebar_label":"Troubleshooting","sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Offer Code Redemption","permalink":"/docs/guides/offer-code-redemption"},"next":{"title":"FAQ","permalink":"/docs/guides/faq"}}');var r=s(4848),t=s(8453),o=s(571);const c={title:"Troubleshooting",sidebar_label:"Troubleshooting",sidebar_position:5},a="Troubleshooting",l={},d=[{value:"Prerequisites Checklist",id:"prerequisites-checklist",level:2},{value:"App Store Setup (iOS)",id:"app-store-setup-ios",level:3},{value:"Google Play Setup (Android)",id:"google-play-setup-android",level:3},{value:"Common Issues",id:"common-issues",level:2},{value:"<code>requestProducts()</code> returns an empty array",id:"requestproducts-returns-an-empty-array",level:3},{value:"1. Connection not established",id:"1-connection-not-established",level:4},{value:"2. Product IDs don&#39;t match",id:"2-product-ids-dont-match",level:4},{value:"3. Products not approved (iOS)",id:"3-products-not-approved-ios",level:4},{value:"4. App not uploaded to Play Console (Android)",id:"4-app-not-uploaded-to-play-console-android",level:4},{value:"<code>useIAP</code> hook not working",id:"useiap-hook-not-working",level:3},{value:"1. Missing provider setup",id:"1-missing-provider-setup",level:4},{value:"2. Multiple providers",id:"2-multiple-providers",level:4},{value:"Purchase flow issues",id:"purchase-flow-issues",level:3},{value:"1. Purchases not completing",id:"1-purchases-not-completing",level:4},{value:"2. <code>onPurchaseSuccess</code> triggering automatically on app restart (iOS)",id:"2-onpurchasesuccess-triggering-automatically-on-app-restart-ios",level:4},{value:"2. Testing on simulators/emulators",id:"2-testing-on-simulatorsemulators",level:4},{value:"Connection issues",id:"connection-issues",level:3},{value:"1. Network connectivity",id:"1-network-connectivity",level:4},{value:"2. Store service unavailable",id:"2-store-service-unavailable",level:4},{value:"Platform-specific issues",id:"platform-specific-issues",level:3},{value:"iOS Issues",id:"ios-issues",level:4},{value:"Android Issues",id:"android-issues",level:4},{value:"Debugging Tips",id:"debugging-tips",level:2},{value:"1. Enable verbose logging",id:"1-enable-verbose-logging",level:3},{value:"2. Log purchase events",id:"2-log-purchase-events",level:3},{value:"3. Monitor connection state",id:"3-monitor-connection-state",level:3},{value:"Testing Strategies",id:"testing-strategies",level:2},{value:"1. Staged testing approach",id:"1-staged-testing-approach",level:3},{value:"2. Test different scenarios",id:"2-test-different-scenarios",level:3},{value:"3. Device testing matrix",id:"3-device-testing-matrix",level:3},{value:"Error Code Reference",id:"error-code-reference",level:2},{value:"Getting Help",id:"getting-help",level:2},{value:"Bug report template",id:"bug-report-template",level:3}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",input:"input",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"troubleshooting",children:"Troubleshooting"})}),"\n",(0,r.jsx)(o.A,{}),"\n",(0,r.jsx)(n.p,{children:"This guide covers common issues you might encounter when implementing in-app purchases with expo-iap and how to resolve them."}),"\n",(0,r.jsx)(n.h2,{id:"prerequisites-checklist",children:"Prerequisites Checklist"}),"\n",(0,r.jsx)(n.p,{children:"Before diving into troubleshooting, ensure you have completed these essential steps:"}),"\n",(0,r.jsx)(n.h3,{id:"app-store-setup-ios",children:"App Store Setup (iOS)"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Agreements"}),": Completed all agreements, tax, and banking information in App Store Connect"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Sandbox Account"}),': Created sandbox testing accounts in "Users and Roles"']}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Device Setup"}),': Signed into iOS device with sandbox account in "Settings > iTunes & App Stores"']}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Products Created"}),': Set up In-App Purchase products with status "Ready to Submit"']}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"google-play-setup-android",children:"Google Play Setup (Android)"}),"\n",(0,r.jsxs)(n.ul,{className:"contains-task-list",children:["\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Play Console"}),": Completed all required information in Google Play Console"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Test Accounts"}),": Added test accounts to your app's testing track"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Signed Build"}),": Using signed APK/AAB (not debug builds)"]}),"\n",(0,r.jsxs)(n.li,{className:"task-list-item",children:[(0,r.jsx)(n.input,{type:"checkbox",disabled:!0})," ",(0,r.jsx)(n.strong,{children:"Upload"}),": Uploaded at least one version to internal testing"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"common-issues",children:"Common Issues"}),"\n",(0,r.jsxs)(n.h3,{id:"requestproducts-returns-an-empty-array",children:[(0,r.jsx)(n.code,{children:"requestProducts()"})," returns an empty array"]}),"\n",(0,r.jsx)(n.p,{children:"This is one of the most common issues. Here are the potential causes and solutions:"}),"\n",(0,r.jsx)(n.h4,{id:"1-connection-not-established",children:"1. Connection not established"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const {connected, getProducts} = useIAP();\n\nuseEffect(() => {\n  if (connected) {\n    // \u2705 Only call requestProducts when connected\n    requestProducts({skus: productIds, type: 'inapp'});\n  } else {\n    console.log('Not connected to store yet');\n  }\n}, [connected]);\n"})}),"\n",(0,r.jsx)(n.h4,{id:"2-product-ids-dont-match",children:"2. Product IDs don't match"}),"\n",(0,r.jsx)(n.p,{children:"Ensure your product IDs exactly match those configured in the stores:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// \u274c Wrong: Using different IDs\nconst productIds = ['my_product_1', 'my_product_2'];\n\n// \u2705 Correct: Using exact IDs from store\nconst productIds = ['com.yourapp.product1', 'com.yourapp.premium'];\n"})}),"\n",(0,r.jsx)(n.h4,{id:"3-products-not-approved-ios",children:"3. Products not approved (iOS)"}),"\n",(0,r.jsx)(n.p,{children:"Products need time to propagate through Apple's systems:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Wait up to 24 hours after creating products"}),"\n",(0,r.jsx)(n.li,{children:'Ensure products are in "Ready to Submit" status'}),"\n",(0,r.jsx)(n.li,{children:"Test with sandbox accounts"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"4-app-not-uploaded-to-play-console-android",children:"4. App not uploaded to Play Console (Android)"}),"\n",(0,r.jsx)(n.p,{children:"For Android, your app must be uploaded to Play Console:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Create signed build\n./gradlew assembleRelease\n\n# Upload to Play Console internal testing track\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"useiap-hook-not-working",children:[(0,r.jsx)(n.code,{children:"useIAP"})," hook not working"]}),"\n",(0,r.jsx)(n.h4,{id:"1-missing-provider-setup",children:"1. Missing provider setup"}),"\n",(0,r.jsx)(n.p,{children:"Ensure you're using the hook within the provider context:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// \u274c Wrong: Hook used outside provider\nfunction App() {\n  const {connected} = useIAP(); // This will fail\n  return <MyApp />;\n}\n\n// \u2705 Correct: Hook used within provider\nimport {IAPProvider} from 'expo-iap';\n\nfunction AppWithProvider() {\n  return (\n    <IAPProvider>\n      <App />\n    </IAPProvider>\n  );\n}\n\nfunction App() {\n  const {connected} = useIAP(); // This works\n  return <MyApp />;\n}\n"})}),"\n",(0,r.jsx)(n.h4,{id:"2-multiple-providers",children:"2. Multiple providers"}),"\n",(0,r.jsx)(n.p,{children:"Don't wrap your app with multiple IAP providers:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// \u274c Wrong: Multiple providers\n<IAPProvider>\n  <IAPProvider>\n    <App />\n  </IAPProvider>\n</IAPProvider>\n\n// \u2705 Correct: Single provider\n<IAPProvider>\n  <App />\n</IAPProvider>\n"})}),"\n",(0,r.jsx)(n.h3,{id:"purchase-flow-issues",children:"Purchase flow issues"}),"\n",(0,r.jsx)(n.h4,{id:"1-purchases-not-completing",children:"1. Purchases not completing"}),"\n",(0,r.jsx)(n.p,{children:"Always handle purchase updates and finish transactions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const {currentPurchase, finishTransaction} = useIAP();\n\nuseEffect(() => {\n  if (currentPurchase) {\n    handlePurchase(currentPurchase);\n  }\n}, [currentPurchase]);\n\nconst handlePurchase = async (purchase) => {\n  try {\n    // Validate receipt\n    const isValid = await validateOnServer(purchase);\n\n    if (isValid) {\n      // Grant purchase to user\n      await grantPurchase(purchase);\n\n      // \u2705 Always finish the transaction\n      await finishTransaction({\n        purchase,\n        isConsumable: false, // default is false\n      });\n    }\n  } catch (error) {\n    console.error('Purchase handling failed:', error);\n  }\n};\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Important - Transaction Acknowledgment Requirements"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"iOS"}),": Unfinished transactions remain in the queue indefinitely until ",(0,r.jsx)(n.code,{children:"finishTransaction"})," is called"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Android"}),": Purchases must be acknowledged within ",(0,r.jsx)(n.strong,{children:"3 days (72 hours)"})," or they will be ",(0,r.jsx)(n.strong,{children:"automatically refunded"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["For consumable products: Use ",(0,r.jsx)(n.code,{children:"finishTransaction({purchase, isConsumable: true})"})]}),"\n",(0,r.jsxs)(n.li,{children:["For non-consumables/subscriptions: Use ",(0,r.jsx)(n.code,{children:"finishTransaction({purchase})"})," or ",(0,r.jsx)(n.code,{children:"finishTransaction({purchase, isConsumable: false})"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h4,{id:"2-onpurchasesuccess-triggering-automatically-on-app-restart-ios",children:["2. ",(0,r.jsx)(n.code,{children:"onPurchaseSuccess"})," triggering automatically on app restart (iOS)"]}),"\n",(0,r.jsx)(n.p,{children:"This happens when transactions are not properly finished. iOS stores unfinished transactions and replays them on app startup:"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Problem"}),": Your ",(0,r.jsx)(n.code,{children:"onPurchaseSuccess"})," callback fires automatically every time the app starts with a previous purchase."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Cause"}),": You didn't call ",(0,r.jsx)(n.code,{children:"finishTransaction"}),' after processing the purchase, so iOS keeps the transaction in an "unfinished" state.']}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Solution"}),": Always call ",(0,r.jsx)(n.code,{children:"finishTransaction"})," after successfully processing a purchase:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const {finishTransaction} = useIAP({\n  onPurchaseSuccess: async (purchase) => {\n    console.log('Purchase successful:', purchase);\n\n    try {\n      // 1. Validate the receipt (IMPORTANT: Server-side validation required for both platforms)\n      if (Platform.OS === 'ios') {\n        // WARNING: validateReceipt() from useIAP is for development only!\n        // For production, ALWAYS validate on your secure server\n\n        // Option 1 (Development only - NOT SECURE):\n        // const { validateReceipt } = useIAP();\n        // const receiptData = await validateReceipt(purchase.id);\n\n        // Option 2 (RECOMMENDED - Secure):\n        const isValid = await validateReceiptOnServer({\n          transactionId: purchase.transactionId,\n          productId: purchase.id,\n        });\n        if (!isValid) {\n          console.error('Invalid receipt');\n          return;\n        }\n      } else if (Platform.OS === 'android') {\n        // Android also requires server-side validation\n        const purchaseToken = purchase.purchaseTokenAndroid;\n        const packageName = purchase.packageNameAndroid;\n\n        // Get Google Play access token on your server (not in client)\n        // Then validate the purchase with Google Play API\n        const isValid = await validateAndroidPurchaseOnServer({\n          purchaseToken,\n          packageName,\n          productId: purchase.id,\n        });\n\n        if (!isValid) {\n          console.error('Invalid Android purchase');\n          return;\n        }\n      }\n\n      // 2. Process the purchase (unlock content, update backend, etc.)\n      await processSubscription(purchase);\n\n      // 3. IMPORTANT: Finish the transaction to prevent replay\n      await finishTransaction({\n        purchase,\n        // isConsumable defaults to false, which is correct for subscriptions and non-consumables\n      });\n    } catch (error) {\n      console.error('Purchase processing failed:', error);\n    }\n  },\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Prevention"}),": Handle pending transactions on app startup:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const {getAvailablePurchases, finishTransaction} = useIAP();\n\nuseEffect(() => {\n  const checkPendingPurchases = async () => {\n    // Get all unfinished transactions\n    const purchases = await getAvailablePurchases();\n\n    for (const purchase of purchases) {\n      // Process and finish any pending transactions\n      if (await isAlreadyProcessed(purchase)) {\n        // If already processed, just finish the transaction\n        await finishTransaction({purchase}); // isConsumable: false by default\n      } else {\n        // Process the purchase first, then finish\n        await processPurchase(purchase);\n        await finishTransaction({purchase});\n      }\n    }\n  };\n\n  checkPendingPurchases();\n}, []);\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Important Notes"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This issue primarily affects iOS because of how StoreKit handles transactions"}),"\n",(0,r.jsx)(n.li,{children:"Android requires acknowledgment within 3 days to prevent automatic refunds"}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"isConsumable"})," parameter defaults to ",(0,r.jsx)(n.code,{children:"false"}),", which is appropriate for subscriptions and non-consumable products"]}),"\n",(0,r.jsxs)(n.li,{children:["Never set ",(0,r.jsx)(n.code,{children:"andDangerouslyFinishTransactionAutomatically: true"})," unless you understand the implications"]}),"\n",(0,r.jsx)(n.li,{children:"Always implement proper transaction finishing in your purchase flow"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"2-testing-on-simulatorsemulators",children:"2. Testing on simulators/emulators"}),"\n",(0,r.jsx)(n.p,{children:"In-app purchases only work on real devices:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {Platform} from 'react-native';\nimport {isEmulator} from 'react-native-device-info';\n\nconst checkDeviceSupport = async () => {\n  if (__DEV__) {\n    const emulator = await isEmulator();\n    if (emulator) {\n      console.warn('In-app purchases not supported on simulators/emulators');\n      return false;\n    }\n  }\n  return true;\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"connection-issues",children:"Connection issues"}),"\n",(0,r.jsx)(n.h4,{id:"1-network-connectivity",children:"1. Network connectivity"}),"\n",(0,r.jsx)(n.p,{children:"Handle network errors gracefully:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:'const {connectionError} = useIAP();\n\nif (connectionError) {\n  return (\n    <View>\n      <Text>Store connection failed</Text>\n      <Text>{connectionError.message}</Text>\n      <Button\n        title="Retry"\n        onPress={() => {\n          // Implement retry logic\n          retryConnection();\n        }}\n      />\n    </View>\n  );\n}\n'})}),"\n",(0,r.jsx)(n.h4,{id:"2-store-service-unavailable",children:"2. Store service unavailable"}),"\n",(0,r.jsx)(n.p,{children:"Sometimes store services are temporarily unavailable:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const handleStoreUnavailable = () => {\n  // Show user-friendly message\n  Alert.alert(\n    'Store Unavailable',\n    'The App Store is temporarily unavailable. Please try again later.',\n    [{text: 'OK'}],\n  );\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"platform-specific-issues",children:"Platform-specific issues"}),"\n",(0,r.jsx)(n.h4,{id:"ios-issues",children:"iOS Issues"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Invalid product ID error"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// Ensure you're signed in with sandbox account\n// Check product IDs match exactly\n// Verify app bundle ID matches\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"StoreKit configuration"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// Add StoreKit capability in Xcode\n// For iOS 12.x, add SwiftUI.framework as optional\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Xcode version issues"}),":"]}),"\n",(0,r.jsx)(n.p,{children:"If you're experiencing issues like duplicate purchase events or other unexpected behavior:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Solution"}),": Upgrade to Xcode 16.4 or later"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Known issues resolved"}),": ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/issues/114",children:"#114"}),", ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/react-native-iap/issues/2970",children:"react-native-iap #2970"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Symptoms of old Xcode versions"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Duplicate purchase notifications"}),"\n",(0,r.jsx)(n.li,{children:"StoreKit transaction handling errors"}),"\n",(0,r.jsx)(n.li,{children:"Unexpected purchase flow behavior"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"android-issues",children:"Android Issues"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Billing client setup"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-gradle",children:"// android/app/build.gradle\ndependencies {\n  implementation 'com.android.billingclient:billing:5.0.0'\n}\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Missing permissions"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-xml",children:'\x3c!-- android/app/src/main/AndroidManifest.xml --\x3e\n<uses-permission android:name="com.android.vending.BILLING" />\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"debugging-tips",children:"Debugging Tips"}),"\n",(0,r.jsx)(n.h3,{id:"1-enable-verbose-logging",children:"1. Enable verbose logging"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {setDebugMode} from 'expo-iap';\n\n// Enable debug mode in development\nif (__DEV__) {\n  setDebugMode(true);\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"2-log-purchase-events",children:"2. Log purchase events"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const {currentPurchase, currentPurchaseError} = useIAP();\n\nuseEffect(() => {\n  if (currentPurchase) {\n    console.log('Purchase received:', JSON.stringify(currentPurchase, null, 2));\n  }\n}, [currentPurchase]);\n\nuseEffect(() => {\n  if (currentPurchaseError) {\n    console.error(\n      'Purchase error:',\n      JSON.stringify(currentPurchaseError, null, 2),\n    );\n  }\n}, [currentPurchaseError]);\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-monitor-connection-state",children:"3. Monitor connection state"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const {connected, connectionError} = useIAP();\n\nuseEffect(() => {\n  console.log('Connection state changed:', {connected, error: connectionError});\n}, [connected, connectionError]);\n"})}),"\n",(0,r.jsx)(n.h2,{id:"testing-strategies",children:"Testing Strategies"}),"\n",(0,r.jsx)(n.h3,{id:"1-staged-testing-approach",children:"1. Staged testing approach"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Unit tests"}),": Test your purchase logic without actual store calls"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Sandbox testing"}),": Use store sandbox/test accounts"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Internal testing"}),": Test with real store in closed testing"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Production testing"}),": Final verification in live environment"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-test-different-scenarios",children:"2. Test different scenarios"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const testScenarios = [\n  'successful_purchase',\n  'user_cancelled',\n  'network_error',\n  'insufficient_funds',\n  'product_unavailable',\n  'pending_purchase',\n];\n\n// Test each scenario with appropriate mocks\n"})}),"\n",(0,r.jsx)(n.h3,{id:"3-device-testing-matrix",children:"3. Device testing matrix"}),"\n",(0,r.jsx)(n.p,{children:"Test on various devices and OS versions:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"iOS: Different iPhone/iPad models, iOS versions"}),"\n",(0,r.jsx)(n.li,{children:"Android: Different manufacturers, Android versions, Play Services versions"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"error-code-reference",children:"Error Code Reference"}),"\n",(0,r.jsx)(n.p,{children:"Common error codes and their meanings:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Code"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Action"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_USER_CANCELLED"})}),(0,r.jsx)(n.td,{children:"User cancelled purchase"}),(0,r.jsx)(n.td,{children:"No action needed"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_NETWORK_ERROR"})}),(0,r.jsx)(n.td,{children:"Network connectivity issue"}),(0,r.jsx)(n.td,{children:"Show retry option"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_ITEM_UNAVAILABLE"})}),(0,r.jsx)(n.td,{children:"Product not available"}),(0,r.jsx)(n.td,{children:"Check product setup"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_ALREADY_OWNED"})}),(0,r.jsx)(n.td,{children:"User already owns product"}),(0,r.jsx)(n.td,{children:"Check ownership status"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_INSUFFICIENT_FUNDS"})}),(0,r.jsx)(n.td,{children:"Not enough funds"}),(0,r.jsx)(n.td,{children:"Direct to payment method"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"E_UNKNOWN"})}),(0,r.jsx)(n.td,{children:"Unknown error"}),(0,r.jsx)(n.td,{children:"Log for investigation"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"getting-help",children:"Getting Help"}),"\n",(0,r.jsx)(n.p,{children:"If you're still experiencing issues:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Check logs"}),": Review device logs and crash reports"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Search issues"}),": Check the ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/issues",children:"GitHub issues"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Minimal reproduction"}),": Create a minimal example that reproduces the issue. See ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/issues/114",children:"this example"})," for reference on sharing a helpful repro"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Report bug"}),": File a detailed issue with reproduction steps"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"bug-report-template",children:"Bug report template"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-markdown",children:"**Environment:**\n\n- expo-iap version: x.x.x\n- Platform: iOS/Android\n- OS version: x.x.x\n- Device: Device model\n\n**Description:** Clear description of the issue\n\n**Steps to reproduce:**\n\n1. Step 1\n2. Step 2\n3. Step 3\n\n**Expected behavior:** What should happen\n\n**Actual behavior:** What actually happens\n\n**Logs:** Relevant logs and error messages\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var i=s(6540);const r={},t=i.createContext(r);function o(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);