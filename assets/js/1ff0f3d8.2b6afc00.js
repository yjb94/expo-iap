"use strict";(self.webpackChunkexpo_iap_docs=self.webpackChunkexpo_iap_docs||[]).push([[8749],{571:(e,n,s)=>{s.d(n,{A:()=>t});var i=s(6540),r=s(4848);function a({className:e="adfit",style:n,unit:s,height:a,width:t}){return(0,i.useEffect)(()=>{const n=setTimeout(()=>{const n=document.querySelector(`.${e}`);if(!n)return void console.warn(`AdFit: Element with class "${e}" not found`);const i=n.querySelectorAll(".kakao_ad_area"),r=n.querySelectorAll('script[src*="kas/static/ba.min.js"]');i.forEach(e=>e.remove()),r.forEach(e=>e.remove());const o=document.createElement("ins"),c=document.createElement("script");o.className="kakao_ad_area",o.style.cssText="display:none; width:100%;",c.async=!0,c.type="text/javascript",c.src="//t1.daumcdn.net/kas/static/ba.min.js",o.setAttribute("data-ad-width",t.toString()),o.setAttribute("data-ad-height",a.toString()),o.setAttribute("data-ad-unit",s),n.appendChild(o),n.appendChild(c)},100);return()=>clearTimeout(n)},[e,s,a,t]),(0,r.jsx)("div",{style:n,children:(0,r.jsx)("div",{className:e})})}function t(){return(0,r.jsx)(a,{unit:"DAN-YTmjDwlbcP42HBg6",height:100,width:320,className:"adfit-top",style:{flex:1,marginTop:24,marginBottom:24}})}},6963:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"guides/faq","title":"Frequently Asked Questions","description":"General Questions","source":"@site/versioned_docs/version-2.6/guides/faq.md","sourceDirName":"guides","slug":"/guides/faq","permalink":"/docs/2.6/guides/faq","draft":false,"unlisted":false,"editUrl":"https://github.com/hyochan/expo-iap/tree/main/docs/versioned_docs/version-2.6/guides/faq.md","tags":[],"version":"2.6","sidebarPosition":6,"frontMatter":{"title":"Frequently Asked Questions","sidebar_label":"FAQ","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Troubleshooting","permalink":"/docs/2.6/guides/troubleshooting"},"next":{"title":"Migration Guide","permalink":"/docs/2.6/guides/migration"}}');var r=s(4848),a=s(8453),t=s(571);const o={title:"Frequently Asked Questions",sidebar_label:"FAQ",sidebar_position:6},c="Frequently Asked Questions",l={},d=[{value:"General Questions",id:"general-questions",level:2},{value:"What is expo-iap?",id:"what-is-expo-iap",level:3},{value:"How is expo-iap different from react-native-iap?",id:"how-is-expo-iap-different-from-react-native-iap",level:3},{value:"Can I use expo-iap in a bare React Native project?",id:"can-i-use-expo-iap-in-a-bare-react-native-project",level:3},{value:"Setup and Configuration",id:"setup-and-configuration",level:2},{value:"Why can&#39;t I test in-app purchases in Expo Go?",id:"why-cant-i-test-in-app-purchases-in-expo-go",level:3},{value:"Do I need to configure anything in my app stores?",id:"do-i-need-to-configure-anything-in-my-app-stores",level:3},{value:"How long does it take for products to become available?",id:"how-long-does-it-take-for-products-to-become-available",level:3},{value:"Products and Purchases",id:"products-and-purchases",level:2},{value:"Why does <code>getProducts()</code> return an empty array?",id:"why-does-getproducts-return-an-empty-array",level:3},{value:"Can I purchase products without calling <code>getProducts()</code> first?",id:"can-i-purchase-products-without-calling-getproducts-first",level:3},{value:"How do users cancel subscriptions?",id:"how-do-users-cancel-subscriptions",level:3},{value:"How do I restore purchases?",id:"how-do-i-restore-purchases",level:3},{value:"Receipt Validation",id:"receipt-validation",level:2},{value:"Do I need to validate receipts on my server?",id:"do-i-need-to-validate-receipts-on-my-server",level:3},{value:"What should I do after successful receipt validation?",id:"what-should-i-do-after-successful-receipt-validation",level:3},{value:"What happens if I don&#39;t call <code>finishTransaction()</code>?",id:"what-happens-if-i-dont-call-finishtransaction",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"What should I do when a purchase fails?",id:"what-should-i-do-when-a-purchase-fails",level:3},{value:"How do I handle network errors during purchases?",id:"how-do-i-handle-network-errors-during-purchases",level:3},{value:"Testing",id:"testing",level:2},{value:"Can I test in-app purchases on simulators?",id:"can-i-test-in-app-purchases-on-simulators",level:3},{value:"Why do my purchases work in testing but not in production?",id:"why-do-my-purchases-work-in-testing-but-not-in-production",level:3},{value:"How do I test subscription cancellations?",id:"how-do-i-test-subscription-cancellations",level:3},{value:"Performance and Best Practices",id:"performance-and-best-practices",level:2},{value:"When should I initialize the connection?",id:"when-should-i-initialize-the-connection",level:3},{value:"How do I prevent multiple purchase attempts?",id:"how-do-i-prevent-multiple-purchase-attempts",level:3},{value:"Should I cache product information?",id:"should-i-cache-product-information",level:3},{value:"Migration and Updates",id:"migration-and-updates",level:2},{value:"How do I migrate from react-native-iap?",id:"how-do-i-migrate-from-react-native-iap",level:3},{value:"What if expo-iap doesn&#39;t support a feature I need?",id:"what-if-expo-iap-doesnt-support-a-feature-i-need",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"My app crashes when making purchases",id:"my-app-crashes-when-making-purchases",level:3},{value:"Purchases are successful but features aren&#39;t unlocked",id:"purchases-are-successful-but-features-arent-unlocked",level:3},{value:"I get &quot;Item already owned&quot; errors",id:"i-get-item-already-owned-errors",level:3},{value:"[iOS] purchaseUpdatedListener is called twice after finishTransaction",id:"ios-purchaseupdatedlistener-is-called-twice-after-finishtransaction",level:3},{value:"Still Need Help?",id:"still-need-help",level:2}];function h(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"frequently-asked-questions",children:"Frequently Asked Questions"})}),"\n",(0,r.jsx)(t.A,{}),"\n",(0,r.jsx)(n.h2,{id:"general-questions",children:"General Questions"}),"\n",(0,r.jsx)(n.h3,{id:"what-is-expo-iap",children:"What is expo-iap?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"expo-iap"})," is a comprehensive in-app purchase solution specifically designed for Expo and React Native applications. It provides a unified API for handling purchases across iOS and Android with TypeScript support and modern React hooks."]}),"\n",(0,r.jsx)(n.h3,{id:"how-is-expo-iap-different-from-react-native-iap",children:"How is expo-iap different from react-native-iap?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"expo-iap"})," is the official successor to ",(0,r.jsx)(n.code,{children:"react-native-iap"}),". After 8 years of maintaining ",(0,r.jsx)(n.code,{children:"react-native-iap"})," (with 3K+ stars, 230+ contributors, and 214K monthly downloads), the project is being gradually deprecated in favor of ",(0,r.jsx)(n.code,{children:"expo-iap"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Why the migration?"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Expo-first approach"}),": Expo is now the recommended way to start React Native projects"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Better performance"}),": Built for New Architecture with no manual bridging required"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Lower maintenance cost"}),": Easier to test, update, and support"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Renderer-agnostic"}),": Works seamlessly across different React Native architectures"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Production-ready"}),": Already used in major apps with 2M+ daily active users"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key improvements in expo-iap:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Native Expo Modules integration"}),"\n",(0,r.jsxs)(n.li,{children:["Modern React hooks API (",(0,r.jsx)(n.code,{children:"useIAP"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Enhanced TypeScript support with full type safety"}),"\n",(0,r.jsx)(n.li,{children:"Streamlined error handling with centralized error codes"}),"\n",(0,r.jsx)(n.li,{children:"Cleaner APIs and smoother developer experience"}),"\n",(0,r.jsx)(n.li,{children:"Out-of-the-box New Architecture support"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For more details about the migration and reasoning, see:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hyochan/react-native-iap/discussions/2754",children:"Migration Discussion"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://x.com/hyodotdev/status/1939420943665049961",children:"Announcement Post"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"can-i-use-expo-iap-in-a-bare-react-native-project",children:"Can I use expo-iap in a bare React Native project?"}),"\n",(0,r.jsxs)(n.p,{children:["Yes! ",(0,r.jsx)(n.code,{children:"expo-iap"})," works in both Expo managed and bare React Native projects. However, it's optimized for Expo workflows."]}),"\n",(0,r.jsx)(n.h2,{id:"setup-and-configuration",children:"Setup and Configuration"}),"\n",(0,r.jsx)(n.h3,{id:"why-cant-i-test-in-app-purchases-in-expo-go",children:"Why can't I test in-app purchases in Expo Go?"}),"\n",(0,r.jsxs)(n.p,{children:["In-app purchases require native modules that aren't available in Expo Go. You need to create a ",(0,r.jsx)(n.a,{href:"https://docs.expo.dev/development/create-development-builds/",children:"custom development client"})," or use a bare workflow."]}),"\n",(0,r.jsx)(n.h3,{id:"do-i-need-to-configure-anything-in-my-app-stores",children:"Do I need to configure anything in my app stores?"}),"\n",(0,r.jsx)(n.p,{children:"Yes, you need to:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"iOS (App Store Connect):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Complete agreements, tax, and banking information"}),"\n",(0,r.jsx)(n.li,{children:"Create in-app purchase products"}),"\n",(0,r.jsx)(n.li,{children:"Set up sandbox test accounts"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Android (Google Play Console):"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Upload your app to a testing track"}),"\n",(0,r.jsx)(n.li,{children:"Create in-app products"}),"\n",(0,r.jsx)(n.li,{children:"Add test accounts"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"how-long-does-it-take-for-products-to-become-available",children:"How long does it take for products to become available?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"iOS"}),": Products can take up to 24 hours to become available in sandbox"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Android"}),": Products are usually available immediately after app upload"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"products-and-purchases",children:"Products and Purchases"}),"\n",(0,r.jsxs)(n.h3,{id:"why-does-getproducts-return-an-empty-array",children:["Why does ",(0,r.jsx)(n.code,{children:"getProducts()"})," return an empty array?"]}),"\n",(0,r.jsx)(n.p,{children:"Common causes:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Connection not established - check ",(0,r.jsx)(n.code,{children:"connected"})," state"]}),"\n",(0,r.jsx)(n.li,{children:"Product IDs don't match store configuration exactly"}),"\n",(0,r.jsx)(n.li,{children:"Products not yet approved/available (iOS)"}),"\n",(0,r.jsx)(n.li,{children:"App not uploaded to store (Android)"}),"\n",(0,r.jsx)(n.li,{children:"Testing on simulator/emulator"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const {connected, getProducts} = useIAP();\n\nuseEffect(() => {\n  if (connected) {\n    getProducts({skus: ['com.yourapp.product1']});\n  }\n}, [connected]);\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"can-i-purchase-products-without-calling-getproducts-first",children:["Can I purchase products without calling ",(0,r.jsx)(n.code,{children:"getProducts()"})," first?"]}),"\n",(0,r.jsxs)(n.p,{children:["No, you should always call ",(0,r.jsx)(n.code,{children:"getProducts()"})," first. This ensures:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Products are available and properly configured"}),"\n",(0,r.jsx)(n.li,{children:"You have the latest pricing and product information"}),"\n",(0,r.jsx)(n.li,{children:"The store connection is established"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"how-do-users-cancel-subscriptions",children:"How do users cancel subscriptions?"}),"\n",(0,r.jsx)(n.p,{children:"Users cannot cancel subscriptions within your app. You need to direct them to the platform-specific subscription management:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"import {deepLinkToSubscriptions} from 'expo-iap';\n\nconst openSubscriptionManagement = () => {\n  deepLinkToSubscriptions();\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"how-do-i-restore-purchases",children:"How do I restore purchases?"}),"\n",(0,r.jsx)(n.p,{children:"For non-consumable products and subscriptions:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const {getAvailablePurchases} = useIAP();\n\nconst restorePurchases = async () => {\n  try {\n    const purchases = await getAvailablePurchases();\n    // Process and validate restored purchases\n    for (const purchase of purchases) {\n      await validateAndGrantPurchase(purchase);\n    }\n  } catch (error) {\n    console.error('Restore failed:', error);\n  }\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"receipt-validation",children:"Receipt Validation"}),"\n",(0,r.jsx)(n.h3,{id:"do-i-need-to-validate-receipts-on-my-server",children:"Do I need to validate receipts on my server?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Yes, absolutely!"})," Client-side validation is not secure. Always validate receipts on your secure server to prevent fraud."]}),"\n",(0,r.jsx)(n.h3,{id:"what-should-i-do-after-successful-receipt-validation",children:"What should I do after successful receipt validation?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Grant the purchase to the user (update database, unlock features, etc.)"}),"\n",(0,r.jsxs)(n.li,{children:["Call ",(0,r.jsx)(n.code,{children:"finishTransaction()"})," to complete the purchase"]}),"\n",(0,r.jsx)(n.li,{children:"Log the transaction for your records"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const handlePurchaseUpdate = async (purchase) => {\n  try {\n    // 1. Validate on server\n    const isValid = await validateReceiptOnServer(purchase);\n\n    if (isValid) {\n      // 2. Grant purchase\n      await grantPurchaseToUser(purchase);\n\n      // 3. Finish transaction\n      await finishTransaction({purchase});\n    }\n  } catch (error) {\n    console.error('Purchase validation failed:', error);\n  }\n};\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"what-happens-if-i-dont-call-finishtransaction",children:["What happens if I don't call ",(0,r.jsx)(n.code,{children:"finishTransaction()"}),"?"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"The purchase will remain in a pending state"}),"\n",(0,r.jsx)(n.li,{children:"The store will continue to notify your app about this purchase"}),"\n",(0,r.jsx)(n.li,{children:"On iOS, the user may see repeated purchase prompts"}),"\n",(0,r.jsx)(n.li,{children:"On Android, the purchase may be refunded automatically"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.h3,{id:"what-should-i-do-when-a-purchase-fails",children:"What should I do when a purchase fails?"}),"\n",(0,r.jsx)(n.p,{children:"Handle different error types appropriately:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const handlePurchaseError = (error) => {\n  switch (error.code) {\n    case 'E_USER_CANCELLED':\n      // User cancelled - no action needed\n      break;\n\n    case 'E_NETWORK_ERROR':\n      // Show retry option\n      showRetryDialog();\n      break;\n\n    case 'E_ITEM_UNAVAILABLE':\n      // Product not available\n      showProductUnavailableMessage();\n      break;\n\n    case 'E_ALREADY_OWNED':\n      // User already owns this\n      showAlreadyOwnedMessage();\n      break;\n\n    default:\n      // Log for investigation\n      console.error('Purchase error:', error);\n      break;\n  }\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"how-do-i-handle-network-errors-during-purchases",children:"How do I handle network errors during purchases?"}),"\n",(0,r.jsx)(n.p,{children:"Network errors during purchases are tricky because the purchase might still go through. Always:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Don't retry the purchase immediately"}),"\n",(0,r.jsx)(n.li,{children:"Check for pending purchases on app restart"}),"\n",(0,r.jsx)(n.li,{children:"Implement proper error messaging for users"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,r.jsx)(n.h3,{id:"can-i-test-in-app-purchases-on-simulators",children:"Can I test in-app purchases on simulators?"}),"\n",(0,r.jsx)(n.p,{children:"No, in-app purchases only work on real devices. Use:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"iOS: Real iPhone/iPad with sandbox account"}),"\n",(0,r.jsx)(n.li,{children:"Android: Real Android device with signed build"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"why-do-my-purchases-work-in-testing-but-not-in-production",children:"Why do my purchases work in testing but not in production?"}),"\n",(0,r.jsx)(n.p,{children:"Common issues:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Different product IDs between testing and production"}),"\n",(0,r.jsx)(n.li,{children:"App not properly signed for production"}),"\n",(0,r.jsx)(n.li,{children:"Store review process not completed"}),"\n",(0,r.jsx)(n.li,{children:"Different bundle ID or package name"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"how-do-i-test-subscription-cancellations",children:"How do I test subscription cancellations?"}),"\n",(0,r.jsx)(n.p,{children:"You can't directly test cancellations in sandbox, but you can:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Test subscription purchase flow"}),"\n",(0,r.jsx)(n.li,{children:"Test subscription restoration"}),"\n",(0,r.jsx)(n.li,{children:"Use server-side webhook notifications for cancellation handling"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"performance-and-best-practices",children:"Performance and Best Practices"}),"\n",(0,r.jsx)(n.h3,{id:"when-should-i-initialize-the-connection",children:"When should I initialize the connection?"}),"\n",(0,r.jsx)(n.p,{children:"Initialize as early as possible in your app's lifecycle:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"function App() {\n  const {connected} = useIAP(); // Connection starts automatically\n\n  return <YourAppContent />;\n}\n"})}),"\n",(0,r.jsx)(n.h3,{id:"how-do-i-prevent-multiple-purchase-attempts",children:"How do I prevent multiple purchase attempts?"}),"\n",(0,r.jsx)(n.p,{children:"Implement purchase state management:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const [isPurchasing, setIsPurchasing] = useState(false);\n\nconst handlePurchase = async (productId) => {\n  if (isPurchasing) return;\n\n  setIsPurchasing(true);\n  try {\n    await requestPurchase({sku: productId});\n  } finally {\n    setIsPurchasing(false);\n  }\n};\n"})}),"\n",(0,r.jsx)(n.h3,{id:"should-i-cache-product-information",children:"Should I cache product information?"}),"\n",(0,r.jsx)(n.p,{children:"Yes, cache products to improve performance:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const [cachedProducts, setCachedProducts] = useState({});\n\nconst getProductsWithCache = async (skus) => {\n  const uncachedSkus = skus.filter((sku) => !cachedProducts[sku]);\n\n  if (uncachedSkus.length > 0) {\n    const products = await getProducts({skus: uncachedSkus});\n    // Cache the products\n    setCachedProducts((prev) => ({\n      ...prev,\n      ...products.reduce((acc, product) => {\n        acc[product.productId] = product;\n        return acc;\n      }, {}),\n    }));\n  }\n\n  return skus.map((sku) => cachedProducts[sku]).filter(Boolean);\n};\n"})}),"\n",(0,r.jsx)(n.h2,{id:"migration-and-updates",children:"Migration and Updates"}),"\n",(0,r.jsx)(n.h3,{id:"how-do-i-migrate-from-react-native-iap",children:"How do I migrate from react-native-iap?"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"expo-iap"})," is the official successor to ",(0,r.jsx)(n.code,{children:"react-native-iap"}),". The migration is straightforward with these key changes:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Installation:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# Remove react-native-iap\nnpm uninstall react-native-iap\n\n# Install expo-iap\nnpx expo install expo-iap\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"API Changes:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// react-native-iap (OLD)\nimport {useIAP, withIAPContext} from 'react-native-iap';\n\nfunction App() {\n  return (\n    <withIAPContext>\n      <YourApp />\n    </withIAPContext>\n  );\n}\n\n// expo-iap (NEW)\nimport {useIAP} from 'expo-iap'; // No context wrapper needed\n\nfunction App() {\n  return <YourApp />; // Hook works anywhere in your app\n}\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Hook Usage (mostly compatible):"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// Most of the useIAP API remains the same\nconst {\n  connected,\n  products,\n  purchases,\n  getProducts,\n  requestPurchase,\n  finishTransaction,\n  // ... other methods\n} = useIAP();\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Key Benefits of Migration:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Automatic connection management"})," - no manual connection setup"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Better error handling"})," - centralized error codes across platforms"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Expo Config Plugin"})," - simplified native configuration"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"New Architecture support"})," - future-proof your app"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Active maintenance"})," - continued updates and support"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Migration Timeline:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"react-native-iap"})," will be gradually deprecated over time"]}),"\n",(0,r.jsx)(n.li,{children:"Critical security updates will continue for existing users"}),"\n",(0,r.jsxs)(n.li,{children:["New features and improvements will only be added to ",(0,r.jsx)(n.code,{children:"expo-iap"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For detailed migration guide and community support:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hyochan/react-native-iap/discussions/2754",children:"GitHub Migration Discussion"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://x.com/hyodotdev/status/1939420943665049961",children:"Official Announcement"})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"what-if-expo-iap-doesnt-support-a-feature-i-need",children:"What if expo-iap doesn't support a feature I need?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Check if it's in the roadmap"}),"\n",(0,r.jsx)(n.li,{children:"File a feature request"}),"\n",(0,r.jsx)(n.li,{children:"Consider contributing to the project"}),"\n",(0,r.jsx)(n.li,{children:"For urgent needs, you might need to use react-native-iap"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,r.jsx)(n.h3,{id:"my-app-crashes-when-making-purchases",children:"My app crashes when making purchases"}),"\n",(0,r.jsx)(n.p,{children:"Common causes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Not handling purchase updates properly"}),"\n",(0,r.jsx)(n.li,{children:"Memory leaks from not cleaning up listeners"}),"\n",(0,r.jsx)(n.li,{children:"Trying to finish transactions multiple times"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"purchases-are-successful-but-features-arent-unlocked",children:"Purchases are successful but features aren't unlocked"}),"\n",(0,r.jsx)(n.p,{children:"This usually indicates:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Receipt validation is failing"}),"\n",(0,r.jsx)(n.li,{children:"Purchase handling logic has bugs"}),"\n",(0,r.jsx)(n.li,{children:"Database/state updates are not working"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Check your server logs and purchase handling code."}),"\n",(0,r.jsx)(n.h3,{id:"i-get-item-already-owned-errors",children:'I get "Item already owned" errors'}),"\n",(0,r.jsx)(n.p,{children:"This happens when:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Trying to purchase a non-consumable product again"}),"\n",(0,r.jsx)(n.li,{children:"Previous transaction wasn't finished properly"}),"\n",(0,r.jsx)(n.li,{children:"Need to restore purchases instead"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"ios-purchaseupdatedlistener-is-called-twice-after-finishtransaction",children:"[iOS] purchaseUpdatedListener is called twice after finishTransaction"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Issue:"})," On iOS, ",(0,r.jsx)(n.code,{children:"purchaseUpdatedListener"})," may be called twice for the same transaction when using ",(0,r.jsx)(n.code,{children:"andDangerouslyFinishTransactionAutomatically: false"})," and manually calling ",(0,r.jsx)(n.code,{children:"finishTransaction()"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Symptoms:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"First call: Immediate after successful purchase"}),"\n",(0,r.jsxs)(n.li,{children:["Second call: After ",(0,r.jsx)(n.code,{children:"finishTransaction()"})," is called (or on app restart for products)"]}),"\n",(0,r.jsxs)(n.li,{children:["Both calls have the same ",(0,r.jsx)(n.code,{children:"transactionId"})]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"// This pattern may cause duplicate calls\nconst purchaseListener = purchaseUpdatedListener(async (purchase) => {\n  console.log('Purchase received:', purchase.transactionId);\n  await validateOnServer(purchase);\n  await finishTransaction({purchase, isConsumable: false});\n  // \u26a0\ufe0f Listener may be called again after finishTransaction\n});\n\nawait requestPurchase({\n  sku: 'your.product.id',\n  andDangerouslyFinishTransactionAutomatically: false,\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Workaround:"})," Track processed transactions to avoid duplicate processing:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-tsx",children:"const processedTransactions = new Set();\n\nconst purchaseListener = purchaseUpdatedListener(async (purchase) => {\n  const transactionId = purchase.transactionId;\n\n  // Skip if already processed\n  if (processedTransactions.has(transactionId)) {\n    console.log('Transaction already processed:', transactionId);\n    return;\n  }\n\n  // Mark as processed\n  processedTransactions.add(transactionId);\n\n  try {\n    console.log('Processing purchase:', transactionId);\n    await validateOnServer(purchase);\n    await finishTransaction({purchase, isConsumable: false});\n  } catch (error) {\n    // Remove from processed set if validation fails\n    processedTransactions.delete(transactionId);\n    console.error('Purchase processing failed:', error);\n  }\n});\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Root Cause:"})," This appears to be an Apple StoreKit behavior where finishing a transaction triggers another purchase notification. This is a known iOS platform limitation, not specific to expo-iap."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Related Issues:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/issues/56",children:"GitHub Issue #56"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/hyochan/react-native-iap/issues/2713",children:"react-native-iap Issue #2713"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"still-need-help",children:"Still Need Help?"}),"\n",(0,r.jsx)(n.p,{children:"If your question isn't answered here:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Check the ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/issues",children:"GitHub issues"})]}),"\n",(0,r.jsxs)(n.li,{children:["Review the ",(0,r.jsx)(n.a,{href:"./troubleshooting",children:"troubleshooting guide"})]}),"\n",(0,r.jsxs)(n.li,{children:["Create a ",(0,r.jsx)(n.a,{href:"https://github.com/hyochan/expo-iap/issues/new",children:"minimal reproduction example"})]}),"\n",(0,r.jsx)(n.li,{children:"Join the community discussions"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>o});var i=s(6540);const r={},a=i.createContext(r);function t(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);